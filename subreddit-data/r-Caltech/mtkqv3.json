{
    "id": "mtkqv3",
    "score": 12,
    "title": "CS at Caltech",
    "author": "Blahfacetrousers",
    "date": 1618777665.0,
    "url": "https://www.reddit.com/r/Caltech/comments/mtkqv3",
    "media_urls": [],
    "other_urls": [],
    "postText": "Can anyone comment on the breadth of courses available in the CS curriculum? Does it actually matter? General feelings about the program? Are Caltech grads prepared to succeed in the industry?\n\nI'm choosing between CMU and Caltech for CS and I haven't been able to gather much information on CS at Caltech. If anyone has any insights on the relative merits of both programs, that would be helpful.",
    "comments": [
        {
            "level": 0,
            "comment": "Caltech's comparative advantage lies in \"CS+x\": applying CS to the natural and social sciences. Caltech CS majors have access to incredible opportunities such as working at JPL, writing code for labs on campus, collaborating with MechEs on robotics, and more. \n\nSo, the breadth of CS at Tech comes from its interdisciplinary aspect. You'll get even more natural sciences exposure through Core. Caltech CS is the right choice if you're interested in opportunities such as the above. \n\nBy contrast if you want a straight up CS degree with the goal of ending up as a software engineer at a tech company, there's not much of a point at going to Caltech, where the CS industry prep would be adequate but not amazing. CMU, a school which focuses more on industry prep, would be a better choice.",
            "score": 13,
            "author": "A_FUCKING_RETARD",
            "replies": [
                {
                    "level": 1,
                    "comment": "&gt; Not much of a point at going to Caltech\n\nEven so, the average CS Grad from Caltech's salary is comparable to that of people who graduate from CMU. \n\nI think the difference between the CS at Caltech and CS elsewhere is that Caltech (unsurprisingly) focuses more on general problem solving and theory as opposed to concepts related to software engineering. I would say most recent Caltech grads are behind when it comes to actual software engineering experience, but catch up quickly.\n\nThe one thing that Caltech does a really poor job of is inspiring entrepreneurship. This is very different from schools like Berkley or Stanford where you regularly see startups popping out of those schools right off the bat. Whereas Caltech students, if they were to pursue their own businesses, typically do so later in life, or join startups in high rank technical positions, rather than C-suite positions",
                    "score": 6,
                    "author": "TangerineX",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Is it still possible for Caltech grads to tap into the startup ecosystem of LA? Like, if I'm interested in entrepreneurship from the get go will Caltech serve as a barrier to that?",
                            "score": 2,
                            "author": "Blahfacetrousers",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Of course.\n\nNobody will say \"this kid's from Caltech, I sure won't let them into my startup. \n\nCaltech is doing better with it's entrepreneurship, for example, I took a class where the whole idea was to learn about entrapeneurship and the steps it would take you to go through it and bring an idea into fruition. Here's the [final report](https://docs.google.com/document/d/170sy3k6NWTmOUfHPvkGY7IHs70yL3uA5-RXvjRIimVo/edit?usp=sharing) my team created as part of that class for reference on what things we learned/did. This was EE/CS 147\n\n&gt;  EE/CS 147. Digital Ventures Design. 9 units (3-3-3): first term. Prerequisites: none. This course aims to offer the scientific foundations of analysis, design, development, and launching of innovative digital products and study elements of their success and failure. The course provides students with an opportunity to experience combined team-based design, engineering, and entrepreneurship. The lectures present a disciplined step-by-step approach to develop new ventures based on technological innovation in this space, and with invited speakers, cover topics such as market analysis, user/product interaction and design, core competency and competitive position, customer acquisition, business model design, unit economics and viability, and product planning. Throughout the term students will work within an interdisciplinary team of their peers to conceive an innovative digital product concept and produce a business plan and a working prototype. The course project culminates in a public presentation and a final report. Every year the course and projects focus on a particular emerging technology theme.\n\nThis class introduced me to some ideas, but didn't really give me that many connections to people who cared about startups. The best thing I got out of the class was an invitation to sit in on some Angel Investor meetings and pitches, which was extremely helpful in understanding what happens.\n\nWhen I was a student at Caltech, some students got together and started organizing [HackTech](https://hacktech.app/), which is a Caltech run hackathon. While I participated, this would be an avenue into meeting people who are also interested in more practical experience and potentially entrepreneurship. \n\nHowever, when I interviewed at startup companies after graduation, they basically all had the same feedback for me: strong programming fundamentals and fantastic with analysis. However, needs more practical programming experience with modern real world frameworks. This was true even after a few years at my first job, which was writing mostly Java with with a little bit of React, where I'd pass the algorithms and engineering sections of technically interviews with ease, but struggle to build a front end component in a specific language I wasn't familiar with. In other words, startups want engineers who can start working on code from the getgo, which is why practical knowledge is important for interacting with the startup world, rather than the more theory/big brain stuff that Caltech education focuses on. Those concepts are way more important for longevity, when you tackle harder problems, and start going into software architecture rather than just engineering.\n\nSo at Caltech, where the primary goal of each prof is really to produce more people to go into Academia, you won't be meeting as many people as compared to let's say Stanford who want to start their own company. That being said, my best friend did found a startup in the LA area after college, and although he wasn't miserable, his pay was barely livable. He got his connections through an internship through his Graphics courses, and his startup was focused on VR applications, and VR Consulting. He's since quit and joined a much more well established startup in the bay area.",
                                    "score": 2,
                                    "author": "TangerineX",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "Does anyone leave undergrad with that sort of practical knowledge? I was under the impression that that sort of stuff is generally acquired through experience or at least not thru classes.",
                                            "score": 1,
                                            "author": "Blahfacetrousers"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "It's been far too long since I was an undergrad, so my awareness of the specific classes on offer are irrelevant, but I totally agree with the above that Caltech is not a \"technical school\", so if your interest in being in CS for CS industry reasons, you can go elsewhere and likely will get a more \"ready to work\" focus.",
                    "score": 3,
                    "author": "toybuilder"
                },
                {
                    "level": 1,
                    "comment": "I have some advice for anyone who wants to go to college to learn programming: There are good reasons to go, but they won't teach you how to write software. There are not enough instruction hours. You have to teach yourself. Start before you go (years before, if possible.) Code outside of your classroom assignments, A LOT. Learn how to code without a safety net.\n\nNo college I know of teaches enough programming in CS to mint anything like a competent software developer. They all waste far too much time on courses that have nothing to do with the discipline, the knowledge from which will be forgotten within a few years (and that is being generous.) Of course this is to \"round you out,\" but you will pay for it because all of the time they DIDN'T spend teaching you how to write software is time you'll be catching up to on the job, where there is far less mentorship and no instructors to ask.\n\nDon't get me wrong. I loved statistics even though I struggled at it. I could feel myself getting smarter in the process. The fundamental problem is that software development takes years to get barely, passably good at. The standard four-year college window is simply not adequate.\n\nA software development degree should really be six years, and AT LEAST the last THREE should be pure software development. Not philosophy, not math, not science, not anything but analyzing business use cases and turning them into clean, MAINTAINABLE code backed with unit and integration tests with 100% code coverage. (Getting developers out of the \"I have to act like a little kid trying to dodge homework\" phase of trying to find any excuse not to write tests can be like pulling teeth. That should be thoroughly beaten out of them WELL before graduation for what people pay to go to college.)\n\nSOLID design principles and design patterns. Deep dives into popular supplication frameworks that have a future. Version control with git. How to write database schema that doesn't suck crap. How to do infrastructure at AWS. How to cheat at scrum so that you write correct software rather than cobbling together trash because management can only see two weeks at a time, and is utterly blind to technical debt. These are the skills developers need and you aren't going to learn the vast majority of them in college; there simply isn't enough time.\n\nThey are never, ever going to fix this. YOU HAVE TO TEACH YOURSELF. They can help a little bit along the way, but you have to put in the hours. Hundreds of them. THOUSANDS.",
                    "score": 2,
                    "author": "AFX626"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Seconding the other commenter. I was an undergrad at CMU and PhD at Caltech, and you'll have a much larger diversity of classes, research opportunities, and probably companies recruiting at CMU for pure CS. Caltech will force you into a broader science education, and probably just about any faculty member on campus would take on CS undergrads to do some computational work. You'll also probably spent a lot more time on your non-CS classes due to their difficulty than CMU, where classes taken by a broad spectrum of students are usually intentionally easier than in-major classes.\n\nA lot of it can also come down to the social aspects of the school. Do you want the house system of Caltech in a wealthy suburb of Los Angeles where public transit is...patchy, or do you want a tech school in a popular small city with decent public transit? FWIW, I found it much, much easier to take a bus from campus to Pirates games (literally a dozen bus lines that run right off of Forbes) versus getting to interesting areas downtown in LA from Caltech (I guess walk a few miles to the gold line and hope you want to be on the east side of the city).",
            "score": 4,
            "author": "racinreaver",
            "replies": [
                {
                    "level": 1,
                    "comment": "I'm interested in doing a CMS PhD at Caltech. How was your experience there?",
                    "score": 1,
                    "author": "wellfriedbeans",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "I was in the Materials Science option at Caltech, so my thoughts are probably a bit colored by that. In general, grad school is highly dictated by your advisor and department. My advisor was mostly absent, and the university didn't seem to care. Others had great experiences with advisors who were really passionate and interested in kicking butt every day. Sadly the cafe on campus closes at 5 PM, which isn't particularly helpful for the schedule held by most grad students. That means you spend late nights alone in your old breakroom/office with some stale coffee vs being able to get a break chilling out with friends. Plus is nearly everyone you meet will be absolutely brilliant.",
                            "score": 1,
                            "author": "racinreaver"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "[deleted]",
            "score": 1,
            "author": "[deleted]",
            "replies": [
                {
                    "level": 1,
                    "comment": "yeah i suck ass at chem\n\ncmu 25",
                    "score": 1,
                    "author": "Blahfacetrousers",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "[deleted]",
                            "score": 1,
                            "author": "[deleted]",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "cmu",
                                    "score": 1,
                                    "author": "Blahfacetrousers"
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}