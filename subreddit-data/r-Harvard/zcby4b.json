{
    "id": "zcby4b",
    "score": 5,
    "title": "CS 165 vs CS 61?",
    "author": "aptl26",
    "date": 1670166249.0,
    "url": "https://www.reddit.com/r/Harvard/comments/zcby4b",
    "media_urls": [],
    "other_urls": [],
    "postText": "Is it possible to take 165 without 61. Do you think I would learn more in 165? What are the main differences?",
    "comments": [
        {
            "level": 0,
            "comment": "I highly doubt anyone is so good at CS that they should skip 61 before taking other systems courses",
            "score": 13,
            "author": "AcanthocephalaSea412"
        },
        {
            "level": 0,
            "comment": "Took CS61 last year, currently taking CS165. It's probably not doable to take 165 without having taken 61, or at least having learned some of the relevant systems material beforehand, e.g. caching, memory hierarchy and data movement, and basic CPU architecture/vectorized processing. 61 is an intro course to systems programming where you learn the fundamentals of computer systems (basic C++ and assembly, basic OS concepts, caching, concurrency). 165 is an upper div course on database systems and how they work (it is NOT an \"intro to sql\"), but the vibe is more like a graduate class, with most readings being research papers.\n\n\nIt's not as low-level as something like operating systems or computer architecture (no assembly), but at the bare minimum you absolutely need to be comfortable with writing non-trivial programs in pure C. One of my friends took 165 without 61 and he did pretty well, but he basically had to self-study the relevant material in 61 alongside trying to learn 165 material, and he was already kinda nutty at programming. So I guess it's technically possible to take 165 without 61. \n\n\nA lot of 165 is also just straight up software engineering (several thousand lines of code for the semester project) and system design (design doc + code review + presentation). If you want to get the most out of 165, I'd recommend just taking 61 first so you can actually focus on learning the database stuff instead of having to do that and struggle with understanding basic systems concepts. They're both excellent classes though. Highly recommend taking both. :)",
            "score": 6,
            "author": "sthlurp",
            "replies": [
                {
                    "level": 1,
                    "comment": "That's really helpful. Thanks a lot!",
                    "score": 2,
                    "author": "aptl26"
                }
            ]
        }
    ]
}