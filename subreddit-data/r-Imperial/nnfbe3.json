{
    "id": "nnfbe3",
    "score": 3,
    "title": "Computing at Imperial - Do we need to have learned computing in school to be able to cope with the course?",
    "author": "DancingDorritos",
    "date": 1622261876.0,
    "url": "https://www.reddit.com/r/Imperial/comments/nnfbe3",
    "media_urls": [],
    "other_urls": [],
    "postText": "Hi! I have accepted an offer for computing at imperial as an international student. Though I know some basics of python programming, is it necessary for me to have at least background knowledge in proper programming or computing as a whole to be able to cope with this course? I understand imperial wouldn\u2019t have accepted me if they did require it (since I have not studied it in my IB), but hearing that computing is a difficult course, and considering the fact that the university is a top university, would I be able to cope with the course?\n\nOf course some answers may be - it depends how I plan my time etc.. but are there any students out there / do you know any students who came into the computing course not knowing much about the subject, and how are they coping now? \n\nThanks for the response in advance!",
    "comments": [
        {
            "level": 0,
            "comment": "My experience is that without some foundation programming, you are going to need to work hard to keep up. Many of your peers will be competent before the course even starts. \n\nA bigger question is why you have decided on computing as a degree. Why do you think it is a good fit for you? Most people on a computing course have demonstrated their interest in computer science. Often with extra curriculars. It\u2019s a relatively hard degree. You will need to be motivated to put in that extra effort and it is hard to find motivation without some intrinsic interest in the topic.\n\nI\u2019m not suggesting you don\u2019t have this, but usually it is apparent in your interests and background.",
            "score": 2,
            "author": "ma-hi"
        },
        {
            "level": 0,
            "comment": "The Computing course is more about theory and algorithms than actual code. The idea is that you are supposed to be able to understand why X particular language does what it does and figure out how to use it properly.\n\nI had never written code before and they taught us a rather obscure language on day 1 to ensure people would be on as similar a starting ground as possible.\n\nWhether or not you'll need to put in some time on your own to truly become comfortable with whichever language you're using for a particular project is up to you as a person, but the difficulty comes in actually wrapping your head around the information and knowledge needed to do said projects.\n\nCompare to like a woodshop or metalwork apprenticeship - each programming language is like a particular lathe or weld or whatever. Sure it takes some skill and practice to use that tool, but there's no point learning that tool if you don't know when to use it and why you're using it.\n\nDon't be nervous - they build the curriculum for people like you and me. Just don't get complacent either.",
            "score": 1,
            "author": "Zystral",
            "replies": [
                {
                    "level": 1,
                    "comment": "Wow I\u2019m glad to here that. Thanks for the input!! But besides programming, I mean computing as a whole, no prior knowledge would be needed right? For example the parts of the computer, how it works etc",
                    "score": 1,
                    "author": "DancingDorritos",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "No - your first year covers all that basic stuff. I heard a lot of my coursemates complain that the first term was just a repeat of their final year of school. Things like hardware, basic binary, logic, even statistics and mathematics are all covered.\n\nAll they care about is that you're able to pick things up and approach it with a fairly logical mind.",
                            "score": 1,
                            "author": "Zystral",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Amazing thanks! That feels reassuring \ud83d\ude04",
                                    "score": 1,
                                    "author": "DancingDorritos"
                                }
                            ]
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "They don\u2019t actually teach Haskell to put everyone in a similar starting position but I suppose it is a nice side effect.",
                    "score": 1,
                    "author": "FunctionalPureLazy"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Imperial says that you don't need to have any prior knowledge of Computing, but honestly it really helps knowing some things. I did a lot of Computing in highschool and it was very easy for me, but I saw some students that didn't know any coding strugle a bit at the beginning. If you have the time I recommend writing some easy code from YouTube, it will help. Just follow some Java or Python tutorial. If you don't want to do that you'll be fine anyway, you'll receive plenty of help every week from the teaching assistants (such as myself!).\nIn case you want to know, you'll learn Haskell, Kotlin, Java and C in the first year (in this order).",
            "score": 1,
            "author": "kt2909",
            "replies": [
                {
                    "level": 1,
                    "comment": "Wow thanks a lot for this!! After my step exam in June I will try learn the basics of these. Up to what \u201clevel\u201d or up to how much do you recommend me to learn in these programming languages?",
                    "score": 1,
                    "author": "DancingDorritos",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Note: You'll do C, not C++! Sorry, I corrected the comments",
                            "score": 2,
                            "author": "kt2909",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Thanks a lot for this! I will learn this :)",
                                    "score": 1,
                                    "author": "DancingDorritos",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "Make sure you also enjoy this summer. A lot of students get internships during the summer and that doesn't leave that much time for fun. Finish your exams and get ready for the 1st year at Imperial, but also have some fun. Not trying to say that you'll never have time to go out again, but I assume not all your current friends will study in London and it's nice to make memories. Sorry I'm not trying to scare you, uni is fun too :)",
                                            "score": 1,
                                            "author": "kt2909"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "level": 2,
                            "comment": "Learn about classes, subclasses, interfaces, inheritance, methods, all this stuff (Java/Python). This is definitely something important and these concepts are very common in programming. You'll also learn about threads, but I wouldn't go that far. Learn about inteheritance and you'll be fine.\nHaskell is a functional language and tbh is a bit weird. My prior knowledge didn't help me learn Haskell, but I didn't find it that difficult. Anyway, if you want you can write some haskell code and practice using higher order functions.\nKotlin is a combination between Haskell and Java. It was introduced this year so I only learnt it because I had to help 1st years with their courseworks \ud83d\ude05 I hate it and it's not that important (I don't think it's assessed) but the concepts of class, method and so on will help you with Kotlin.\nYou can also play around a bit with pointers and structs for C.",
                            "score": 1,
                            "author": "kt2909"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "Nope not at all - they even prefer that you haven\u2019t so that they can make sure you don\u2019t have any bad practices.",
            "score": 0,
            "author": "SchnoopDougle",
            "replies": [
                {
                    "level": 1,
                    "comment": "Oh wow really? I expected the opposite. And what do you mean bad practices?",
                    "score": 1,
                    "author": "DancingDorritos",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Just a whole load of bad practices. Indentation, comments, readability of code.",
                            "score": 1,
                            "author": "Invincible_Overlord"
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "That was not my experience. Without some basic programming experience, it is going to be an uphill slog.",
                    "score": 1,
                    "author": "ma-hi"
                }
            ]
        }
    ]
}