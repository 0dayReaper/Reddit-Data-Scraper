{
    "id": "13p9kpp",
    "score": 2,
    "title": "Will a platform built on a NoCode platform be taken seriously by investors/incubators?",
    "author": "rezirezi12",
    "date": 1684804221.0,
    "url": "https://www.reddit.com/r/startups/comments/13p9kpp",
    "media_urls": [],
    "other_urls": [],
    "postText": "We\u2019re working on an Saas for small to mid sized CPG businesses. It\u2019s just me and my friend and I\u2019m the technical co-founder. I am pretty experienced with coding and am capable of building the product, however, doing it alone would take considerable amount of time. Recently I have been playing around with NoCode platforms and was really impressed by them! I was always skeptical of these platforms but after drafting up some apps on them, my opinion changed. \nSo I had the idea of building the MVP using nocode and then coding it after getting some traction/funding and hiring some devs. \nThe only issue is that we feel like it could damage our credibility and scare off potential investors and maybe even clients.\nAre our concerns far fetched? Has anyone had a similar experience?",
    "comments": [
        {
            "level": 0,
            "comment": "It really depends on whom you are trying to attract. The more sophisticated your investor, the less likely they will want to invest in a nocode developed platform. Not that nocode is always bad, but like you said, it can only take you so far and eventually you'll have to flip to a new platform. That transition is what gets you. You'll have to plan in significant money and time for that switch and the longer you delay, the more it costs to eventually do it. Takes longer, too. That time for the switch will allow your competitors to catch up and they know exactly how to target you...",
            "score": 3,
            "author": "tag4424"
        },
        {
            "level": 0,
            "comment": "The lifecycle of the startup tech is usually a non-tech solution (CEO with a phone and an excel spreadsheet) validating and getting first sales. Then you get an MVP that sucks. Then you add features based on feedback until it actually is useful but still sucks.\n\nThen you throw it away and rewrite it so it sucks a little less. Then you expand your team and throw it away and rewrite it again because you had technical debt and it made it impossible to work on it.\n\nThen it becomes a Theseus ship with bits and pieces being rewriting for eternity.\n\nAny investor that won't invest in a company because their tech stack is bad is not a good investor and don't understand how tech works. It takes **years** to get a mature tech stack and those companies don't need investments.\n\nNowadays every single company is a tech company and the only reason to get investments is to hire more engineers. It's not 1930 where you need capital to buy a factory.",
            "score": 2,
            "author": "Academic-Honey7946",
            "replies": [
                {
                    "level": 1,
                    "comment": "Seems like your post sums it up. Overengineering an MVP is a waste (unless it\u2019s supposed to be used in some high stakes setting, such as clinical trials). There is a reason why we hear advice such as \u201cdo things that don\u2019t scale\u201d and \u201cf\u2019 it, ship it\u201d in the beginning. At this point, investor concerns are more likely going to focus on things like traction, market feedback and unique insights, the team, etc. Beyond \u201cdo you have a CTO yet?\u201d I\u2019ve never experienced investors looking to dig into the tech at this stage of the game.",
                    "score": 1,
                    "author": "CaffeinatedRob_8"
                },
                {
                    "level": 1,
                    "comment": "&gt;The lifecycle of the startup tech is usually a non-tech solution (CEO with a phone and an excel spreadsheet) validating and getting first sales. Then you get an MVP that sucks. Then you add features based on feedback until it actually is useful but still sucks.  \n&gt;  \n&gt;Then you throw it away and rewrite it so it sucks a little less. Then you expand your team and throw it away and rewrite it again because you had technical debt and it made it impossible to work on it.  \n&gt;  \n&gt;Then it becomes a Theseus ship with bits and pieces being rewriting for eternity.  \n&gt;  \n&gt;Any investor that won't invest in a company because their tech stack is bad is not a good investor and don't understand how tech works. It takes years to get a mature tech stack and those companies don't need investments.  \n&gt;  \n&gt;Nowadays every single company is a tech company and the only reason to get investments is to hire more engineers. It's not 1930 where you need capital to buy a factory.\n\nYou're absolutely right!! The Lean Startup developed by Eric Ries that emphasizes exactly the same concept you've described. The importance of validating ideas, iterating quickly, and minimizing waste in the startup process. Create a MVP and conduct rapid experimentation to learn and adapt based on customer feedback. \n\nTherefore, I truly think no-code platform is a perfect solution for all startups regardless the founders having tech background or not so the founding team can focus on real important things, e.g. validating their ideas and iterate in a cost-effective and efficient manner. I would like to recommend a next generation of no-code platform that will revolutionize the way you build web apps ([Momen](https://momen.app/product?channel=reddit_post)). It covers both frontend and backend in a single tool and designed to scale effortlessly as your use base and data grow. You can use Momen to build any application from MVP to a complicated AI-powered SaaS product, marketplace, social media, blog without writing a single line of code.",
                    "score": 0,
                    "author": "Momen_AI"
                }
            ]
        },
        {
            "level": 0,
            "comment": "How do you plan to show them how you're going to go beyond the nocode limitations?\n\nIf you can show them that short-term nocode is a shortcut/launching pad, without them doubting your future beyond that, then you're in good shape.\n\nBut that means that you must show them that you can perform at a no-nocode normal. You can't give them any reason to think that you're peaking at the nocode level. Nor that you'll get stuck at the transition between nocode and when you have to start coding.\n\nIf your CV is strong enough, with good references, this isn't impossible to do.",
            "score": 1,
            "author": "downtownflurry"
        },
        {
            "level": 0,
            "comment": "Hey there,\nRemember, people aren't really worried about all the techy details of your platform, as long as you're solving their problems. Same goes for investors - they're interested in you making something that solves issues, and brings in the dough. Bottom line is, create something that people will love.",
            "score": 1,
            "author": "arto_from_signlz"
        },
        {
            "level": 0,
            "comment": "What nocode platform did you use?",
            "score": 1,
            "author": "schoolishardneedhelp"
        },
        {
            "level": 0,
            "comment": "Funding is about story telling and how your tech solves the problem. As long as you have the expertise to create an app which solves the problem, a good VC doesn't care which platform you built it on.\n\nThe focus is more on business: traction, how you'll grow, monetization, etc.\n\nThey know the tech/platform will change as your company grows.",
            "score": 1,
            "author": "BetterFootball7126"
        },
        {
            "level": 0,
            "comment": "I think as long as you can show value and get people to pay for it, any solution works",
            "score": 1,
            "author": "Nearby_Violinist5501"
        },
        {
            "level": 0,
            "comment": "What's the platform you are using?",
            "score": 1,
            "author": "jeffus",
            "replies": [
                {
                    "level": 1,
                    "comment": "Hey, I would like to introduce a next generation of no-code platform [Momen](https://momen.app/product?channel=reddit_post). It will revolutionize the way you build web apps. Momen covers both frontend and backend in a single tool and designed to scale effortlessly as your use base and data grow. The strongly-typed compiler and near-instant-full app preview make it a breeze to start building your applications! You can use Momen to build any application from MVP to a complicated AI-powered SaaS product, marketplace, social media, blog without writing a single line of code. \n\nDefinitely give it a try!",
                    "score": 1,
                    "author": "Momen_AI"
                }
            ]
        },
        {
            "level": 0,
            "comment": "A company I loved [https://moonlightwork.com/](https://moonlightwork.com/) (which is a shell of its former self) was built with nocode platforms, and then sold for a big chunk of money. The new owner let it fall to shit almost immediately by not seeking out the same high quality leads.   \n\n\nIt really depends on the idea. The greatness of moonlight work was the leads. I don't care if it was nocode. It could have looked like Craigslist. If you execute well nobody will care.",
            "score": 1,
            "author": "liltechnomancer"
        },
        {
            "level": 0,
            "comment": "As long as you can present it with a scaling plan.",
            "score": 1,
            "author": "pigeon888"
        },
        {
            "level": 0,
            "comment": "Take a look at Noodl to build your MVP.  Its all based on React and their built in DB is Parse/MongoDB.  As you are a developer you can build straight JS in the front end where you feel a limitation is present, can use API's out of the box.    \n\n\nI started using it and fell in love.  Just recently launched and site using Ruby in a container less AWS environment but was not satisfied with the time and expense it took to develop it.  \n\n\nNow I am building a very heavily data driven application in Noodl. We are starting off with their hosting, but can host it ourselves when it makes sense.  If Parse/Mongo are a good choice for your app it wouldn't take much of a change to connect it to a horizontally scaled data back end.  \n\n\nI haven't done it yet, but you should be able to parse out sections of your app in time by building microservices, and connect to the other parts including the nocode/lowcode parts.    \n\n\nSo I think you can scale pretty will with some of the nocode/low code tools out there, doing  some rewrites along the way.",
            "score": 1,
            "author": "Fun-Consequence-4294"
        }
    ]
}