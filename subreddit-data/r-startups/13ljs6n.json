{
    "id": "13ljs6n",
    "score": 47,
    "title": "Junior Developer to CTO",
    "author": "RelevantSuggestion50",
    "date": 1684467088.0,
    "url": "https://www.reddit.com/r/startups/comments/13ljs6n",
    "media_urls": [],
    "other_urls": [],
    "postText": "Hey everyone, \n\n  \nHope this message finds you well. Was wondering if I could get some advice? \n\n  \nI was recently approached by 2 startup founders looking for a CTO. A little bit about myself, dropped out of college, attended a coding bootcamp, started working as a full time full stack developer in Nov. 2022. Been working at the same company since then, however I feel as if I'm getting too comfortable/not growing &amp; need a new mountain to climb. \n\n  \nDefinitely don't have the expertise/experience for the CTO role, however I understand that growth comes as a result from uncomfortable times and am definitely up for that challenge! My current tech stack consists of: SQL, Java, C#, ReactJS, Angular (also experience w/ Azure Data Factory). As SWE's with years of more experience than me, what are the most essential tools I should be adding to my arsenal? AWS? Security best practices? System architecture? \n\n  \nThank you for taking the time to read this post, immensely appreciated my friend. \n\n  \nCheers,   \nMatt",
    "comments": [
        {
            "level": 0,
            "comment": "Is this \u201cCTO as in development leadership with VPs reporting to you and directors reporting to them etc\u201d or is this \u201cthere are three of us and you\u2019re the developer so congratulations you\u2019re CTO we guess\u201d?\n\nIf it\u2019s the latter, go nuts man, but understand that title is at best fanciful and at worst kinda disingenuous. No hate, it happens all the time in startups. If it\u2019s the former, as in a real CTO role in the more traditional sense, that\u2019s gonna be 10% technical and 90% business strategy and management, which it sounds like you might not have a ton of experience with.",
            "score": 33,
            "author": "azdak",
            "replies": [
                {
                    "level": 1,
                    "comment": "Let's be honest, the fact they're reaching out to a jr. dev says it's the second.\n\nAnd with that, I fully back up the recommendation - \"go nuts man\". But be ready to be under water with tech tasks and BIG architectural decisions.",
                    "score": 12,
                    "author": "DrJ_PhD",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "This",
                            "score": 2,
                            "author": "Pesos2020"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "Short answer: I don't recommend it.\n\nLong answer: I would be highly, highly, skeptical of any startup putting a Jr. Dev in a CTO role. This means several things:\n\n1. That management doesn't have the network to find anyone actually qualified. Which is a major concern as strength of network is one of the main things startups rely on to raise money, find customers, and attract top talent.\n2. The startup will have more difficulty finding funding because the CTO is not \"fundable\" - i.e. does not have relevant experience, name recognition, or objectively good credentials.\n3. That management doesn't understand that the role of a CTO as a startup scales is about managing, not about writing code. They're setting themselves and you up for failure by creating a situation where there is such a strong mismatch between skills and requirements. \n4. If everything goes well, they will eventually outgrow your skills and will need to replace you. You take all the risk of the early stage, and will likely get dumped once things go good.\n\nWith all that said, there are tons of startups that have done exactly what you're suggesting and they're wildly successful. Startups are a weird world where you can do everything absolutely right and fail, while others can do everything absolutely wrong and succeed. However, it does seem to hold that the more things that are done right, the better the chance of success.",
            "score": 135,
            "author": "PolarityInversion",
            "replies": [
                {
                    "level": 1,
                    "comment": "This. They seem to just be looking for a code monkey with the promise of a \"CTO\". Either they are going to screw OP through contracts or clueless like you said.",
                    "score": 29,
                    "author": "atedja"
                },
                {
                    "level": 1,
                    "comment": "I agree with you on your points,every investor is going to want to know the background of your founding team. It\u2019s not a good look if junior engineer is the CTO. However, if OP worked at a big tech company, there are ways to present it in a favourable light. Ultimately, if the two founders are charismatic enough this wouldn\u2019t matter and they may just find someone more qualified as CTO.",
                    "score": 9,
                    "author": "anonAcc1993"
                },
                {
                    "level": 1,
                    "comment": "Good points.\n\nI would never hire OP as CTO - I\u2019ve done the startup CTO thing myself and am considering again, and this profile is not something you can do. While sometimes the first tech position is code monkey, they are not usually those qualified to take the product any further beyond the 1-person team. You will be kicked out or demoted within a year once you\u2019ve either succeeded to create something remotely useful or failed in trying that.\n\nOP, please understand that you might be the reason this startup fails. That said, I appreciate your enthusiasm and if I had been in your shoes in my early twenties, I would have absolutely leaped for the opportunity, results be damned. I\u2019m not going to be the one telling you not to.\n\nI think you might be able to get the product started. I would not hire you (I\u2019ve seen startups really screw up by hiring cheap juniors when they could not afford, say, me), but it does not mean you\u2019ll fail.\n\nYou may grow in place, or at least you\u2019ll build the crappy first version which will help to sell and will be rewritten anyway. Your challenges will be not understanding sufficiently about scaling the product, hiring a team and manging a team. If you do this thing, start learning about all the things you do not yet know (note - you will not learn them in months, but understanding them helps you to find your eventual role), get multiple mentors, and ask for help.\n\nIn startups you may have the \u201dlet\u2019s build the first crap\u201d person, the \u201dbuilding the first tech team\u201d person, and \u201dscaling the dev dept\u201d person. The three are rarely the same person. Startups are a ride, don\u2019t forget to scream while enjoying it.",
                    "score": 3,
                    "author": "Equivalent-Print-634"
                },
                {
                    "level": 1,
                    "comment": "\u2026.it\u2019s a startup. This is rubbish",
                    "score": 2,
                    "author": "TitusPullo4",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "... yea, it's a startup. It's 10x harder than any job you've worked, which is why it's important to get things right.",
                            "score": 0,
                            "author": "PolarityInversion",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "A startup's founders can be anyone from someone in high school with an idea to someone with fifty years' experience. You've written a bullet pointed post discouraging someone from \"jumping from junior dev to CTO at a startup\" but I doubt the same post would ever be written for a non-technical cofounder taking the position of a CEO. The labels are meaningless, what matters is the idea and building it. Skills and experience can be developed and more people can be involved as the business grows.\n\nIt's this\n\n&gt;there are tons of startups that have done exactly what you're suggesting and they're wildly successful.\n\nFor a reason",
                                    "score": 4,
                                    "author": "TitusPullo4"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "1- if the opportunity scares you do it! You\u2019ll learn a ton. If you need a network of field questions I can help you. I\u2019m entrepreneurial minded software engineer. I\u2019ve been in the game for 9 years. Work as a SRE/DevOps bc I love distributed system. My recent stint was working on the compute team at Twitter. Watching over 500k servers processing ~10M req/sec globally. \n\nI code everyday bc I love launching products. Launched a product last year on Reddit that gets good traffic. I\u2019ll be launching my second product (paid) in a few days. \n\n\n2- make sure it\u2019s CTO benefits (mainly meaningful equity stake) and not \u201cwe need a dev to work for free\u201d or \u201cwe just need a tech person on your pitch decks\u201d\n\n\nCongrats on the opportunity Matt! Happy to help whenever you need it.",
            "score": 6,
            "author": "innovatekit"
        },
        {
            "level": 0,
            "comment": "If you can swing the risk, do it. You will become more risk averse in your future. Do these things now.\nBe shrewd, concise, transparent yet strategic.\nEvaluate their path to cash and roadmap.",
            "score": 5,
            "author": "cravecode"
        },
        {
            "level": 0,
            "comment": "Just do it. Starting your first startup is about failure and learning where knowledge is missing - or realizing as an executive your goal is to guide folks and know when and how to add someone to the team to fill a gap.\n\nThere is a lot to learn in tech, but a lot of practices are thrown \"out\" early on for the sake of speed. You will aquire tech debt and hopefully find a time, sooner rather than later, to address it with a larger team.\n\nIf you know how to get a landing page up and can accomplish getting to an MVP, you will be fine. From there you'll figure it out, all software engineers figure it out.",
            "score": 4,
            "author": "Savvy_One",
            "replies": [
                {
                    "level": 1,
                    "comment": "Also don't forget to do things that don't scale. Don't over engineer. Do manual deployments, etc. Before trying to build perfect CI/CD.\n\nIf you feel you are hard working, dedicated and think this company and product is going to be a good opportunity, then just do it. Starting you in the entrepreneurship world is what will set you up for success in the future.",
                    "score": 1,
                    "author": "Savvy_One"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Hey there Matt!\n\n&amp;#x200B;\n\nCongratulations on taking the dive! One of the best engineers I have ever hired was self-taught never attended college. So don't feel out of place!\n\nIn startup land, the biggest thing I can tell you is be ready to move fast. And that really means, be ok with messy code but able to function. My co-founder who is my cto grew from fullstack to lead dev to my co-founder. I am a sales/PM oriented ceo, non technical. What is amazing about my co-founder is that he can write super clean code...but...when you are hunting for PMF you will change product so much that you have to know the codebase well enough to keep it running through iterations. This means that it maybe quite ugly some times but constant experimentation requires speed and you have to sometime sacrifice perfect code. He knows the codebase though super well. Worry about clean code when the servers are on fire from so much usage. Then you can pour capital and engineering into paying off tech debt.\n\nSo my advice to you,  AWS is awesome for sure learn it, or some provider (heroku is our favorite :) ), learn architecture especially. My co-founder is an amazing architect. When our code base was massive he knew exactly why something would break. Besides that be willing to learn. The signs of a great leader is being able to soak in knowledge super fast. If your co-founders are serious, ask them to bring in a seasoned cto advisor to mentor/advise you. I did, and it helped my co-founder grow so much. I have advisors for different parts of the business that help me, why not the same for engineering?",
            "score": 18,
            "author": "E2e1el",
            "replies": [
                {
                    "level": 1,
                    "comment": "How can I connect with your cofounder? Would live to gain some learning from him :)",
                    "score": 3,
                    "author": "Low-Organization-771",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "As a general point, look through mentoring-club.com. It's an honest free German mentoring nonprofit with members from all over the world speaking every common language.",
                            "score": 3,
                            "author": "blbd"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "I think there's a lot of bad advise on this thread so far. What it sounds like to me is that you have non-technical co-founders that are looking for somebody technical to figure out and do the work.\n\nWhat they really need at this point is a technical architect and somebody who can prototype. It sounds like you very well may have those skills. The skills that they are going to need, and you are going to need in this role that you don't have at this point in your career or the leadership, management, how to scale on application as you grow, etc. The actual things that a CTO would need, which aren't really needed at the very initial stage of a startup unless they're extremely well-funded and he can't afford an experience CTO, which it doesn't sound like is the case otherwise you wouldn't be in the picture.\n\nHere's what you need to understand, these guys don't know what they're doing technically. There is a lot of opportunity and a lot of risk, you can grow faster as a person in this type of role than you could possibly hope to elsewhere, and there is a high likelihood failure as is the case with all early stage startups. You're going to be the guy who has to figure it all out, you're probably signing up for 60 to 80 hour weeks for the next foreseeable period of time. Even with that, there's a chance that the tech works but the business doesn't, which isn't really going to be in your control. Learning to deal with people, especially executive type people in early stage startup situations, it's probably the hardest thing that you're going to need to learn.\n\nGood luck whichever direction you choose.\n\nSource: I'm the CTO of a 10-year-old, 400 person company who started with two non-technical co-founders 10 years ago. I probably wasn't really qualified to be a CTO at the time, but I'm really good at figuring stuff out, and I'm an expert in the particular space that we're in... And here we are 10 years later.",
            "score": 6,
            "author": "hxstr",
            "replies": [
                {
                    "level": 1,
                    "comment": "I think a key point that a lot of people seem to miss when saying \"go for it, all that matter are results!\" is that code quality is not necessarily meant to improve the lives of the customers, it is meant to improve the lives of the dev team.\n\nI have been in projects with almost no automated tests, \"move as quickly as possible\" mentality, no CI/CD, etc. At the end of the day, nobody else cares as long as things work. \n\nBut it is only once things arent working and you are working all day and night putting out little fires left and right in production while other important stakeholders are pressuring you to \"just get it done\" and new features start getting released at snail speed because everything depends on everything else and your life starts crumbling around you while you are getting closer and closer to the depressing abyss of burnout that you think \"hmm, maybe quality *does* matter - to me anyway\".\n\nEDIT: Forgot to mention: Good luck hiring and retaining talent when your codebase is a cluttered mess!",
                    "score": 1,
                    "author": "bnunamak"
                }
            ]
        },
        {
            "level": 0,
            "comment": "One thing my partners agreed to l, as we\u2019re still young (in our 20s) though we are the founders and on paper C-level executives, we would first hire our weak spots and second hire \u201cmentors\u201d for us to better our professional skills and not hold the company back. I found a developer with much more experience than me and we code together and what I don\u2019t know, he teaches. I still have the title, build out framework + ideas, talk to investors - and he\u2019s the lead developer on the project I learn from.\n\nFrom the conversations I have had with investors, they really like this because it shows we acknowledge our limitations and get help when we need it - but have the know how to push through if we needed to. \n\nMaybe sometime like that may work for y\u2019all. Good luck.",
            "score": 3,
            "author": "FriscoFrank98"
        },
        {
            "level": 0,
            "comment": "Huge red flags in this, tread carefully",
            "score": 5,
            "author": "choccysmeg"
        },
        {
            "level": 0,
            "comment": "If you gain some budget you can connect with experienced outside teams to support you. Helpful to network.",
            "score": 2,
            "author": "Kyaterix"
        },
        {
            "level": 0,
            "comment": "Learn as much as you can about the business side of the startup. It will help you communicate with your partners and better prioritize your technical work. Also, a startup gives you access to the WHOLE business, especially when small. Finally, don't worry about the CTO title. Titles mean nothing, and non-funded/non-revenue startup executive titles even less! If you are really \"up for the challenge\" it will be a great learning experience.\n\nOn the tech side, setup an issue tracker, mandate code reviews for anything merging to master, and require &gt;90% test coverage. Get in the habit of making an issue for every new feature or fix, and sharing knowledge with your team by doing (very short) code reviews. The point of the code review is not to spend a lot of time, but to create an ethos of quality amongst the team. If good programmers KNOW someone will even glance at their code, they won't leave in icky things. Adding testing supports these same aims while avoiding regressions. I like [\"Write tests. Not too Many, Mostly integration\" by Kent C. Dodds](https://kentcdodds.com/blog/write-tests). Finally, use 2fa for all service accounts and internal logins.",
            "score": 2,
            "author": "danjlwex",
            "replies": [
                {
                    "level": 1,
                    "comment": "First part of this is spot on.\n\nSecond part I would have a different stance\n\nCode reviews: great if you have even another engineer or you\u2019re doing a large piece of work but ultimately they\u2019ll slow you down as there\u2019s no one else to really \u201creview\u201d it so no benefit, get code out and experiment above all else at this stage \ud83e\uddea\n\nTests: until you have product/problem validation you will be replacing a lot of your code (if you\u2019re not it may be indicative you\u2019re not speaking to customers enough or you\u2019ve just got really lucky \ud83c\udf40) so I\u2019d prioritise code in production as opposed to safe tested code in development until you know what you\u2019re building (granted this is coming from a simple SaaS perspective - not a medical or it\u2019s-really-bad-if-we-make-a-mistake-and-can-damage-lives perspective)\n\nTickets: great for team context but are only really useful for either super high level tasks or when you have a larger team (non-technical people aren\u2019t going to read them and may be for your benefit only) I wouldn\u2019t even bother creating tickets for bugs - just fix them.  \ud83c\udf9f\ufe0f",
                    "score": 1,
                    "author": "autonomousErwin"
                }
            ]
        },
        {
            "level": 0,
            "comment": "The title of CTO will mean very little the moment you step outside that role. No one is going to take you seriously if you jumped from a junior dev to CTO, so do know if you plan on leaving that you will likely be back at being a junior dev.",
            "score": 3,
            "author": "bearded__jimbo",
            "replies": [
                {
                    "level": 1,
                    "comment": "unless it succeeds",
                    "score": 4,
                    "author": "DiddlyDanq"
                }
            ]
        },
        {
            "level": 0,
            "comment": "How advanced is the start up asking you to join? Is it two people with a dream? Or two people with an actual product that are looking to scale?\n\nMost people confuse CTO with developer, and a lot of founders (especially pre-product stage) think they need a CTO when they actually just need a developer. A \u201creal\u201d CTO rarely actively develops code, they are in a strategic role. Not wholly applicable to start ups but it\u2019s an important distinction as early stage needs experienced devs, not overly consuming strategists. \n\nCandidly, it really depends on what the ask is from the founders. Are you building from scratch? If you are, candidly, you\u2019re probably not experienced enough (As far as I can tell you have less than 1 year of experience and nothing prior) but it really depends on the product you are building.",
            "score": 1,
            "author": "djaxial",
            "replies": [
                {
                    "level": 1,
                    "comment": "I agree they are two different roles. I think what a lot of startups need (but maybe aren\u2019t successfully finding) is a developer that has management potential and desire to become a CTO where they no longer code but manage others that do.  I think this comes down to the typical startup founder/manager being inexperienced in leading a startup and thus fail to be a resource for the lead developer to evolve into a CTO alongside them evolving into the CEO role. Another part I\u2019m sure is anxiety, once the stakes get higher they want to shed the risk of having someone without a battlefield experience in a key role.\nI\u2019m currently looking for such a person myself however I\u2019m very focused on the fact that as the CEO I\u2019m in charge of leading, inspiring and managing my team.",
                    "score": 1,
                    "author": "fanaticallunatic",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Agreed. \n\nAnother point to add to my above is funding rounds would rather see a very experienced dev rather than a placeholder CTO. CTOs can be parachuted in when needed but if the product can\u2019t grow, scale or be maintained, it\u2019s a huge issue.",
                            "score": 1,
                            "author": "djaxial"
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "This comment right here is spot on, there seems to be a disconnect on what people think a CTO is and what early stage companies need. I genuinely hate titles for this reason. At the beginning the only c-suite title should be ceo, and that's because you just need it for investors.   \n\n\nWhat these guys are looking for is a first engineer. They don't need a super experienced person at their stage. CTO's only should exist imho around seed maybe after pre-seed raise. Investors also have many variables to decision for a raise. Usually it is has the team worked together, what traction do they have etc.  An investor wouldn't pass on an early company **if other variables are stronger**. So for these guys if they have a cto role, (which tbh, I raised pre-seed and mentor others that have raised seed+ and I still don't see many ctos with said companies) it might be better just to nix the title to fullstack engineer or first engineer. Which is why OP just be aware, to be able to stay on the horse if these people get far, you will have to demonstrate you can learn.  \n\n\nThe sad truth is every phase of a company needs a different team, and so you need people who can growth with the company.",
                    "score": 1,
                    "author": "E2e1el"
                },
                {
                    "level": 1,
                    "comment": "Well! A CTO starts a sole architect developing the product and then transforms to a strategic role including development after a certain stage when they have a team of developers to manage\n\nIf being a CTO is a strategic role, will u build product in the air out of strategies?\n\nPathetic",
                    "score": -2,
                    "author": "Born_Cash_4210"
                }
            ]
        },
        {
            "level": 0,
            "comment": "CTO doesn't mean anything without context. \n\nIf the role is working with a few people and being the lead developer, it's fine go have fun and hope you make some money and learn. \n\nIf it's managing a team of senior-level engineers with their own reports, and your role is managing, then you will probably fail and it will be awful the whole time.",
            "score": 1,
            "author": "FlorAhhh"
        },
        {
            "level": 0,
            "comment": "C-level roles have legal consequences.  If you don't do what you're supposed to, you can end up in jail, and the money can come out of your pocket personally.\n\nYou are ***six months in***.\n\nYou aren't ready for an intermediate developer position, and the two startup founders that approached you obviously have profoundly bad judgment.  Their companies are definitely going under, and the real question is whether they thought of you as a fall guy.",
            "score": 1,
            "author": "StoneCypher"
        },
        {
            "level": 0,
            "comment": "It\u2019s not impossible to succeed doing this but it sure is hard. The role isn\u2019t about developing but building an enterprise solution and all the demands that come with that. It\u2019s not going to look great to investors either\u2026 why aren\u2019t they looking for a qualified candidate?\n\nHaving said that, if these are similarly relatively junior employees and you spare effectively all winging it together, and have a good idea (that you think you can build), then you all don\u2019t have much choice but to give it a go - they won\u2019t get an experience hire anyway. Certainly people have made it work like this.\n\nHow interesting is the opportunity?",
            "score": 1,
            "author": "tabac-en-paris"
        },
        {
            "level": 0,
            "comment": "What are the experience level of the two founders? Is it an established start up or are they just starting? If they are young and new to the workforce like you, take it. At worst it will be a great working experience and a chance to push yourself. Don\u2019t put your own money into the company, find investors. Take it on as a side role and keep your junior developer role to keep an income. If it doesn\u2019t work out, and you want to put it on your resume, you can downgrade the title to something that suits the role you are applying for since being the CTO of a 3 person start up will be a \u201cman of many hats\u201d position. Sometimes companies do not take a resume with CTO on it if it comes from a short resume. That being said some places admire the ambition so play around with how you include it on your resume.",
            "score": 1,
            "author": "The_Most_Superb"
        },
        {
            "level": 0,
            "comment": "Growth is best done step-wise - even if you take big steps - but taking a huge leap is a formula for failure. How good are you at making critical decisions? How about your experience in managing others (including employees and customers)? How many crises have you steered through? I know it's old school, but there's a certain maturity/experience level needed to be a real \"Chief\" anything operator. I'd politely decline while indicating a Manager/Director role might be attractive and you could support/fill-in until they find the right CTO.  JMHO.",
            "score": 1,
            "author": "Far-Finance-3516"
        },
        {
            "level": 0,
            "comment": "I'd be seriously concerned about the decision-making of those startup founders. Are they really young and want another young person to be CTO?\n\nI wouldn't even make a senior engineer a CTO if they don't have management experience. It's a different skillset, even if the CTO of a startup might be pretty hands-on",
            "score": 1,
            "author": "WhipTheLlama"
        },
        {
            "level": 0,
            "comment": "Take it, the other founders don\u2019t know what they are doing either. If you are willing to work hard and you think you will put the graft in. They are not going to hire a better CTO than you. \n\nLock in good salary and equity with water tight agreement. And go have fun.\n\nYou will learn more from this experience than you will doing what you are doing.\n\nThey approached you! You didn\u2019t apply!",
            "score": 1,
            "author": "DarraghGogarty"
        },
        {
            "level": 0,
            "comment": "There are some good communities that will help you get from dev to CTO, I suggest looking up CTO Craft...its a global group of CTOs and senior techies that can help you get to the level you want...",
            "score": 1,
            "author": "Mission-Blacksmith-9"
        },
        {
            "level": 0,
            "comment": "CTO at a new startup is not the same as CTO at a medium sized company with an engineering team - essentially it\u2019s a software engineering role but with a caveat you don\u2019t have a boss to ask/answer questions for you and for a decent amount of time it\u2019ll just be you, you won\u2019t have to lead a team.\n\nThere\u2019s also nothing wrong with getting the startup going tech-wise and when you start bringing engineers on realising it\u2019s out of your skill set to lead a team and you need to take on a different role and bring someone else on.",
            "score": 1,
            "author": "autonomousErwin"
        },
        {
            "level": 0,
            "comment": "Its going to be hard",
            "score": 1,
            "author": "karmaX2001"
        },
        {
            "level": 0,
            "comment": "It's easier if you have the experience of working as a CTO but many startups founders did not had that experience and were able to accomplish the tasks.\n\nTry it and you'll know.",
            "score": 1,
            "author": "pluralb"
        },
        {
            "level": 0,
            "comment": "Some red flags but could be a good opportunity. If you do it, just be humble and honest about your level of experience and don\u2019t be afraid to lean on, learn from, take the advice of more senior people than you may work with or hire",
            "score": 1,
            "author": "CuriousDev1012"
        },
        {
            "level": 0,
            "comment": "The fact that you feel like you need to learn more tech to become a CTO is a red flag that you're not ready to be a CTO, IMO.\n\nSure, early on you'll have to do a bunch of coding yourself to prototype or get something into production, but very quickly a CTO becomes a dev manager and needs to delegate down aggressively to be successful. Much more about hiring, scaling, managing, project management, and negotiating with the non-tech founders than being a technical wizard assuming you get passed the very initial funding stage.",
            "score": -2,
            "author": "YumYumGoldfish"
        },
        {
            "level": 0,
            "comment": "I\u2019m a bit concerned you don\u2019t think you are growing after being a dev for less than a year. Even doing repetitive boring tasks, you should still be learning and growing after only a few months. If you think you\u2019ve made the most of this job it\u2019s quite likely you are not ready to be a CTO (besides the obvious inexperience). Even if say you are comfortable and doing the job easily - how can you improve the processes, make the team more efficient, and influence change? Can you be strategic and implement change across the team or wider company. These are skills a CTO must have. Start by trying to be more impactful from your current position.\n\nAlso it\u2019s rather concerning two founders are asking a junior dev to be a CTO. This is a pretty big red flag to me.",
            "score": 0,
            "author": "pentesticals"
        },
        {
            "level": 0,
            "comment": "Post is a joke for sure",
            "score": 0,
            "author": "twelveparsec"
        }
    ]
}