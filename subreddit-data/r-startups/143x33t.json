{
    "id": "143x33t",
    "score": 6,
    "title": "I Complex app prototype, Now What?",
    "author": "Such_Professional975",
    "date": 1686192352.0,
    "url": "https://www.reddit.com/r/startups/comments/143x33t",
    "media_urls": [],
    "other_urls": [],
    "postText": "I have an app prototype on Figma with UI/UX kits and I\u2019m not sure what to do next.\n\nMy goal would to be to work on an MVP next, but I don\u2019t have the coding experience that\u2019d accomplish anything that figma cannot. Teaching myself to code well enough to make an MVP would take a longer than finding an experienced coding partner for this specific app. \n\nI feel my best choice to find a TCO through asking other coders for feedback on the prototype. That way I get feedback on the prototype while also scouting for potential business partners, killing two birds with one stone. \n\nI\u2019m here to look for any advice from people who are knowledgeable about this process and if this is the best route to take.\n\nAny advice on what I should do next would help me out a ton!",
    "comments": [
        {
            "level": 0,
            "comment": "You could treat your prototype as the MVP. The purpose of the MVP is not to perfect the actual product per se. It\u2019s to find out if people are interested in solving the problem you think they want to solve and to determine if enough are interested in buying a solution. Answering the question \u201cwill they pay for this?\u201d\n\nUse your prototype to get in front of potential customers and see how they react. If they like it then get feedback on how much. \n\nIf you get traction enough then you can move forward to building out the actual product. If you get crickets and they aren\u2019t interested there is no need. If there\u2019s mixed reaction you\u2019ll get the info about what needs to be changed before you develop the initial shippable version.\n\nGetting creative on how you get feedback on the prototype will give you ideas and info on how you\u2019ll eventually sell the initial product.\n\nJust some thoughts.",
            "score": 2,
            "author": "storysherpa"
        },
        {
            "level": 0,
            "comment": "Go and show people the prototype and see if you get any traction or learn anything about your target market.",
            "score": 2,
            "author": "darthnilus"
        },
        {
            "level": 0,
            "comment": "I am a developer, I've built MVPs in record time before. I would be interested to work with you on this app if:\n\n\\- you prove your concept has potential (customers ready to pay you money)\n\n\\- you share some equity with me\n\n\\- you are ready to put on the line some of your savings",
            "score": 2,
            "author": "AngJobs",
            "replies": [
                {
                    "level": 1,
                    "comment": "Do you know Typescript and React and are you ready to commit for at least 6 months?",
                    "score": 1,
                    "author": "edzorg"
                },
                {
                    "level": 1,
                    "comment": "You shouldn\u2019t have to split equity for an mvp with a developer that isn\u2019t going to stay with your startup.",
                    "score": -2,
                    "author": "Live_cargo",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "But if he can\u2019t pay market value for the work he needs to supplement with equity.",
                            "score": 3,
                            "author": "yabadabadoit",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "I realize I didn't suggest a better alternative to this. I'd recommend raising non-dilutive financing for building out MVPs and such. E.g. a BDC loan or IRAP subsidy. The OP should only offer equity to committed tech cofounders and employees until the startup exits.   \n\n\nIf this line is true then the OP should look for a tech cofounder.\n\n&gt;\\- you prove your concept has potential (customers ready to pay you money)",
                                    "score": 3,
                                    "author": "Live_cargo"
                                },
                                {
                                    "level": 3,
                                    "comment": "Supplement equity with someone who will continually stay at the startup. Giving a freelancer equity is ridiculous. Is this contractor willing to accept a vesting schedule on the equity? I don\u2019t think so.",
                                    "score": 1,
                                    "author": "Live_cargo"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "Would be helpful if you gave some idea of what the app even is and your background.",
            "score": 1,
            "author": "rossedwardsus",
            "replies": [
                {
                    "level": 1,
                    "comment": "\nSorry, I didn\u2019t want to make the initial post too long \n\nThe app is an social online e-commerce marketplace for selling and buying clothes. I\u2019m not looking for feedback on the app on this post, but more advice on what steps I should take next when finishing an app prototype on Figma. I\u2019ve been looking for a TCO for a few months but it\u2019s been fruitless since it\u2019s most coders are looking for steady income or payment for freelance work whole ($100k was the one time payment for an MVP from a freelance agency). \n\nI\u2019m willing to have an initial payment towards a TCO accompanied with vesting equity, but I\u2019ve also been advised that I didn\u2019t need a TCO yet.\n\nLet me know if you want more details about anything specific",
                    "score": 1,
                    "author": "Such_Professional975",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "&gt; TCO\n\nWhats a TCO?",
                            "score": 1,
                            "author": "motherlode1",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Technical Cofounder I guess",
                                    "score": 1,
                                    "author": "BriefRecipe2346"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "You could hire a freelancer. How costly that would be depends on how elaborate the app is. Can you share any details about what you're trying to do?",
            "score": 1,
            "author": "RecursiveBob"
        },
        {
            "level": 0,
            "comment": "Go to networking events and meet technical people.",
            "score": 1,
            "author": "jmoneyb1"
        },
        {
            "level": 0,
            "comment": "There are plenty of development companies that turn your idea into reality for equity. Depends where you live, but this is a business for many many companies around the world.",
            "score": 1,
            "author": "MadPae"
        },
        {
            "level": 0,
            "comment": "I suggest looking for an industry advisor from which you can get feedback on your prototype and join an incubator program, preferably a publicly funded incubator that doesn't ask for equity and has a diverse community of entrepreneurs and advisors around to support you on this journey.\n\nIf your start-up is in the services sector then you can try this trick that worked for me: provide a paid concierge service to 1-3 customers using the prototype. I recommend charging this service for a small fee and advise against giving it away for free. What you want is proof that your target market will pay. You don't need to make superb margins at this stage, figure out the revenue model later. Afterwards, you can pitch your validated proof-of-concept to a potential tech co-founder.\n\nAdditionally, it doesn't hurt to learn about programming but realize that as a business founder, the vast majority of your time will be spent elsewhere. Especially, when you have a tech cofounder.\n\nDO NOT give away equity to someone not willing to stay and provide continual guidance or support for your startup. Equity should vest and it's unlikely a freelancer or temporary contractor will accept vesting terms. Find other means to raise funds for your venture, whether it be a BDC loan, grant/ subsidy, savings, or some form of non-dilutive working capital.",
            "score": 1,
            "author": "Live_cargo"
        },
        {
            "level": 0,
            "comment": "Product\n\nMarket\n\nFind where you product fits.\n\nMake the project as SMALL as possible.\n\nTarget it as CLOSE as possible.\n\nGet out there and talk to people who would benefit the most from your MVP.",
            "score": 1,
            "author": "Lopsided_Reading_362"
        },
        {
            "level": 0,
            "comment": "Complex and MVP in the same sentence is a little concerning. Before investing in engineering resources, I'm wondering if you already have a waitlist of customers interested in the product? \n\nSpeaking from experience as a non-technical solo founder, there are 2 options I'd go with:\n\n1. **Get emails and user interest first with your prototyped designs:** Build a landing page first. Take your prototype and make a GIF so it looks real and users can see how it works. Get emails of people interested in trying a beta. Once you get 250+ emails, then start investing in building.   \n*The hardest part isn't building the product, it's getting your first 100 users to engage and find it valuable.*\n2. **Use no-code tools or workflows:** Yes, it might be hacky and super manual. You might think it's ugly and inefficient. But if you can validate that people care about the problem your potential app can solve - even with some flaws, then you'll learn:\n   1. That it's worth investing money into (engineering costs can get expensive really fast)\n   2. What technical issues you might run into while building (sometimes you don't find technical issues until you actually test out various workflows)",
            "score": 1,
            "author": "Advanced-Assistant28"
        }
    ]
}