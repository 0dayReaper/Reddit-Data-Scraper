{
    "id": "13izwrl",
    "score": 51,
    "title": "Any experience raising a seed round using no code?",
    "author": "survingthriving",
    "date": 1684228283.0,
    "url": "https://www.reddit.com/r/startups/comments/13izwrl",
    "media_urls": [],
    "other_urls": [],
    "postText": "Hi everyone,\n\nWe are currently closing our pre-seed round and are trying to work out the best route to build our web app. We're two non-technical founders. We are a SaaS recruitment platform using video to connect jobseekers with employers. Our MVP was a mix of Typeform/Google Drive/Slack, all third party tools which meant a very limited ability to customise. It served its purpose for an MVP, we scaled to thousands of users and made revenue, but there are lots of UX issues and features we can't deliver for customers to use us long term and not just as a proof of concept pilot.\n\nI'm assessing two options to build the web app: \n\n1. hire a full stack engineer and contractor UX/Design to build it in house. Pros - no limits to customisation, cons - expensive and takes time to reproduce the features of the MVP.\n\n2. Hire a no-code agency to build in Bubble, I will learn Bubble to continue building new features. Pros - can move very fast at a fraction of the cost, I believe we would be able to deliver the web app for the equivalent of 2 months of dev salary (e.g longer runway/invest more in growth), cons - I expect we will be limited by new features/UX in the future and am not sure how VC will perceive the use of Bubble when we raise a Seed round?\n\nThe tech we want to build is not complicated so no-code makes sense short term, but will we regret this later if we ultimately have to build the web app ourselves later down the line?!\n\nAny thoughts would be really appreciated. Cheers.",
    "comments": [
        {
            "level": 0,
            "comment": "From a business presepctive, getting your product to market as quick as possible and improving it further is generally how it's supposed to be done. No-code solutions like Bubble can be a great way to get your product to market quickly and at a lower cost too. I would start with no-code and later on rebuild it by hiring developers. Good luck!!",
            "score": 43,
            "author": "Competitive_Speech36"
        },
        {
            "level": 0,
            "comment": "The only thing that matters is whether you can get customers and show a path to a business. If you have customers and a crappy tech stack you will have plenty of access to money to fix it, and if you have a great tech stack and no customers it won\u2019t matter at all.\n\nWill you regret shortcuts now if you are successful later and it costs a lot of frustrating time and money to go back and do it the right way? Yes, definitely. Will you regret it more if you invest heavily in software no one uses or pays for? Also definitely yes.",
            "score": 19,
            "author": "fluxdrip",
            "replies": [
                {
                    "level": 1,
                    "comment": "I've been involved in raising approx 10 rounds of VC.\n\nWhat may surprise people: only a minority of the VCs have even gotten a demo.  Or care.\n\nThey do care deeply about customer references and take lots of those, plus do industry research, talk to analysts, do backchannel references both on founders and customers, etc.  But the tech is a founder problem.  If it works well they don't give a shit, and if it doesn't work, first they have the ceo fire the vpe/cto and if that doesn't fix things, they fire the ceo.\n\nThat said, the context for this is b2b.  It could be very different for b2c.",
                    "score": 8,
                    "author": "xasdfxx"
                },
                {
                    "level": 1,
                    "comment": "This is the right answer.  \n\n\nPut rebuilding your tech stack into your roadmap to show that you know it needs to be done in order to grow and that you\u2019re planning for it.",
                    "score": 4,
                    "author": "Visual_Collar_8893",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "That is an intelligent move as basically all products go thru some sort of revision after inception. Plus, it is just good business in general to circle back and dial things in, even if it didn\u2019t call for it",
                            "score": 1,
                            "author": "havegravity"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "&gt; The tech we want to build is not complicated so no-code makes sense short term, but will we regret this later if we ultimately have to build the web app ourselves later down the line?!\n\nNo-Code/Low-code tools are a bit like Duct tape.They're great for end users wanting to MacGyver a solution, but no so great for actually building a polished product. You will hit the limitations very quickly, and then need to rewrite it.\n\nFor anything beyond duct tape quality, you'll find that a decent software engineer can build significantly faster *with code* than you'll ever achieve on a low-code solution.\n\n&gt; am not sure how VC will perceive the use of Bubble when we raise a Seed round?\n\nThe VC willing be thinking \"Where's the moat?\". \n\nIf you can built it that quickly on a low-code solution, then so can anyone else. If you outsourced the development, then what IP are they actually investing in?\n\n*in saying that*, sometimes you just need to get a MacGyvered solution to market to prove the business case, so YMMV",
            "score": 10,
            "author": "2bdb2",
            "replies": [
                {
                    "level": 1,
                    "comment": "Have you heard of FlutterFlow? I agree with your post on low-code tools relating to Bubble, Appgyver, and the dozen other top app builders. But FlutterFlow allows full scalability because you can use the builder to start and export the beautiful code at any point and hire a team of developers to scale it.\n\nI don\u2019t know why anyone WOULD hire developers to write code for an MVP when it\u2019s so variable and demands so much flexibility\u2026and FF is perfect for those scenarios. Super fast to iterate and entirely scalable.\n\nThe only caveat is that it\u2019s built on the Dart (Flutter) language so if you\u2019re part of the 3% of apps that absolutely require some core native hardware functionality\u2026but that\u2019s a rare case.",
                    "score": 1,
                    "author": "Cartworthy",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "&gt; Have you heard of FlutterFlow? I agree with your post on low-code tools relating to Bubble, Appgyver, and the dozen other top app builders. But FlutterFlow allows full scalability because you can use the builder to start and export the beautiful code at any point and hire a team of developers to scale it.\n\nThat sounds quite useful. Do they have any lock-in once you export, or is it a completely independent codebase at that point?\n\nI'd be personally hesitant to start a new project on Flutter at this point, but as long as Google keeps it alive it's a fairly good option.\n\n&gt; I don\u2019t know why anyone WOULD hire developers to write code for an MVP when it\u2019s so variable and demands so much flexibility\n\nIt really depends on your skillset. I'm a technical founder, so I can build a prototype with code faster than I could on a low-code platform. For a non-technical founder, these tools are obviously a lot more valuable. \n\nI regularly recommend low-code tools to my customers to build internal tooling, and I've seen some really impressive pieces of critical business infrastructure built on them. I'm less optimistic about them for product development however as (from my experience) they usually just don't scale well. (FlutterFlow could be a good compromise there)\n\nWe're also seeing some really interesting developments in AI - ChatGPT is surprisingly good at churning out GUI boilerplate, and I've started seeing non-programmers build out simple tooling that way. \n\nI think we'll the point soon (if not already) where agencies will be able to very cheaply churn out decent prototypes with LLM code generation, where the engineers job is just to prompt, review, and clean up the rough edges.",
                            "score": 2,
                            "author": "2bdb2"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "You will always regret no code solutions. \n\n \u201cNo code\u201d is meant for back-office internal tools, not customer facing tools",
            "score": 4,
            "author": "cs_legend_93"
        },
        {
            "level": 0,
            "comment": "I met a guy that raised $4m on a pitch deck with no product in early 2022. He didn't have an MVP/BETA product for another 10 - 12 months after that.",
            "score": 4,
            "author": "7FigureMarketer",
            "replies": [
                {
                    "level": 1,
                    "comment": "I bet he was not a first time founder. Also 2021-early 2022 was an all time record high for ease of raising vc capital. Now its the polar opposite.\n\nRaising capital pre product and pre customers is pretty much impossible unless you\u2019re a proven founder and you have a solid business plan. Doubly so in todays market.",
                    "score": 3,
                    "author": "ItchyTheAssHole"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Doing so right now as two non-technical founders. We hired a Bubble development agency. In theory it's nice and I think it will generally work out for us, in terms of a quicker development timeline and lower cost. But we do have some regrets over choosing Bubble and with the agency.\n\nHonestly, I think a full stack engineer could have done the same thing for us for the same amount of time and cost. I don't like being locked into Bubble and being able to change things after is more difficult. Bubble isn't quite as easy to edit things without breaking something as people make it seem.\n\nYou already have an MVP so I'd recommend just hiring a full stack developer. Or at least go with a low-code solution like FlutterFlow with a separate backend like Xano that gives you more freedom and flexibility down the road.",
            "score": 5,
            "author": "SyndeyC"
        },
        {
            "level": 0,
            "comment": "I can't comment about VCs, but I can tell you a few things from a tech perspective :\n\n1. If you are successful you will eventually need to develop in house. The question is not if, but when. \n\n2. No developer wants to do a migration of a product from no-code to a proper app. You will likely have to pay exorbitant rates, or take on a entry level dev who makes mistakes and works slower than a senior. \n\n3. The app is almost definitely more complex than you think. The things that Bubble or your developer will have to take care of are complex and numerous, even if the service is not so complicated.\n\nI don't know your situation so can't say what is best.",
            "score": 16,
            "author": "BayesCrusader",
            "replies": [
                {
                    "level": 1,
                    "comment": "Re #2 - that's a bit of a broad brush. I know many engineers who would be excited to take on that kind of challenge. The business idea is semi-validated, so there wouldn't be a ton of requirements churn (at least in the beginning). Literally - here's the prototype, recreate it with better/sustainable/robust tech. Trust me, a lot of senior engineers sit around all day pontificating about how easy and fun it would be to recreate Facebook in Rails/JavaScript/COBOL/&lt;insert tech&gt;.\n\nSure - it's not easy or simple. There would likely be data migration pain, which is never fun. But again, just another engineering challenge.",
                    "score": 17,
                    "author": "rojeli",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Yeah totally agreed. Building a product from scratch with a well defined spec is fun!",
                            "score": 9,
                            "author": "8105"
                        },
                        {
                            "level": 2,
                            "comment": "Agreed. I'm a dev w/ 20+ years of experience. Having a working prototype, even on a low-code platform, sounds like a dream compared to \"wave hands and scribble on a whiteboard\" specifications.",
                            "score": 7,
                            "author": "tapvt"
                        },
                        {
                            "level": 2,
                            "comment": "They\u2019d still be paying senior dev salaries which we know non-techies on this sub recoil at the thought of.",
                            "score": 2,
                            "author": "Snooprematic",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Well - in the Facebook example, sure. \n\nBut in this example, a no-code to real-code project might be a perfect fit for a junior-to-intermediate engineer. The specification isn't just written - it's already been implemented!\n\nThey might struggle with long-term scale, but he/she likely does not need to optimize for that in the beginning.",
                                    "score": 2,
                                    "author": "rojeli",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "The problem with using junior devs in a situation like this is that they will definitely create a sub-par infrastructure (DB, code principles, etc) which *will* bite you in the ass later when you become bigger. So the question is: \n\n- do it right once by hiring a senior dev to build the whole infrastructure, and then maybe get a junior dev to improve on it since it will be much easier for them to not deviate from a good path\n- do it twice: get a junior dev now to create a MVP 2.0, which will be problematic later, requiring a full rewrite by a senior dev\n- do it 3 times: bubble =&gt; junior =&gt; senior\n\nI know that most non-tech founders are always considering the idea and the sales potential as much more important, but the main thing to remember is that gaining a customer is very hard, but losing them because your SaaS is a bunch of bad copy/pasted code (or worse, a no-code..) will cost you even more.\n\nIf you have the funds from a pre-seed, spend them in the tech stack if you are building a tech company.",
                                            "score": 1,
                                            "author": "Lucacri",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "Of course - not denying any of that, nor am I making a recommendation.\n\nI was just responding to the notion that any type of engineer (junior-intermediate-senior) would run away from the thought of building from a spec originally built in a no-code platform. Surely some might - but not all. Some might actually be excited about it, for varying reasons.",
                                                    "score": 2,
                                                    "author": "rojeli",
                                                    "replies": [
                                                        {
                                                            "level": 6,
                                                            "comment": "Eh kinda, bacause while the high-level logic is kind of defined (\"click this button, and an email is sent\"), the biggest problem is that they will need to migrate the data to a reasonable database layout (normalized, considering indexes etc) and the longer your company is using a copy/pasted mish-mash of services, the harder will be to take your data and use it in the new app.\n\nMigrations like that cost money, time, and are really prone to mistakes, hence why you'd need a senior. And in some cases, the data just cannot moved anymore. So the next question is: are your clients ok if in a few months/years you'll have to wipe out all the data and restart it?\n\nSome companies with more \"ephemeral\" data can afford this, but other ones categorically can't (example, you built a SaaS for email marketing, and the clients would lose all their statistics, opt outs, etc)",
                                                            "score": 2,
                                                            "author": "Lucacri",
                                                            "replies": [
                                                                {
                                                                    "level": 7,
                                                                    "comment": "A likelihood I acknowledged in the very post that kicked off this tangent!\n\nMy whole point was that in just about all things engineering, there are no absolutes. Don't make assumptions at the beginning that senior engineers won't want to do X, or that junior engineers can't do Y. \n\nDon't make assumptions about data migrations either. Maybe the data isn't overly complicated. The industry has been migrating data for decades, you don't always need 100x CS PhDs to do one.",
                                                                    "score": 2,
                                                                    "author": "rojeli",
                                                                    "replies": [
                                                                        {
                                                                            "level": 8,
                                                                            "comment": "Thanks for your insight. I simplified my statements for brevity, so they were more extreme than needed. It's great to hear some perspectives on it.",
                                                                            "score": 2,
                                                                            "author": "BayesCrusader"
                                                                        },
                                                                        {
                                                                            "level": 8,
                                                                            "comment": "Oh for sure! I don\u2019t know their idea/plan to make an informed judgment. The main question is always \u201cdo I want to bet my whole company that we\u2019ll be able to migrate/recode this?\u201d. Same goes for the investors: if I see a SaaS company with no-code or copy/pasted code, I\u2019d be much much more reluctant in investing",
                                                                            "score": 1,
                                                                            "author": "Lucacri"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "level": 2,
                            "comment": "I have reimplemented something that was in bubble with nextjs. It was fine and a quick-ish job since I didn't have to figure out what I was doing and could just focus on doing it.\n\nIt is a very chill time just spending a couple weeks hammering things out without much need for input or communication. Just coding against a well defined spec with a bit of consideration for some likely future ideas.",
                            "score": 2,
                            "author": "TheRealFloomby"
                        },
                        {
                            "level": 2,
                            "comment": "&gt;Trust me, a lot of senior engineers sit around all day pontificating about how easy and fun it would be to recreate [\u2026]\n\nIs this notion being put to use orr?",
                            "score": 1,
                            "author": "havegravity",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Building a Facebook clone is trivial. Adding 3 billion MAUs is another story.",
                                    "score": 2,
                                    "author": "cosmictap",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "Yea I should\u2019ve elaborated. I was referring more about the massive business opportunity right here and less of actually recreating things",
                                            "score": 2,
                                            "author": "havegravity",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "Got you - I may have been reacting to this sub's tendency to be somewhat na\u00efve and out of balance when valuing building something technically vs building a business. Both matter greatly, of course, but the long, winding road to startup success is littered with the bodies of those who thought \"if we build it, they will come\".",
                                                    "score": 1,
                                                    "author": "cosmictap",
                                                    "replies": [
                                                        {
                                                            "level": 6,
                                                            "comment": "I actually attribute mass failure to the landscape of investors. \n\n&gt;the long, winding road to startup success is littered with the bodies of those who thought \"if we build it, they will come\".\n\nYes and no. The majority of those dead bodies are caused by investors not knowing what the fuck they\u2019re doing and overvaluing the literal and absolute fuck out of everything, giving people all over the world false hope in truly terrible ideas. \n\nFor example: how is an avatar NFT company considered a \u201cunicorn\u201d? Absolutely zero vision and zero diligence behind those decisions. It\u2019s not just laughable but embarrassing. \n\nThe other part, addressing the stigma of \u201cif we build it, they will come\", is really about execution or should I say *approach* to execution. The entire internet is littered with trash websites that take 16 year to load ads because their approach is weak and their lifeline is limited to just ad revenue. That concept applies across the entire startup ecosystem, ie \u201clow input = low output.\u201d\n\nEdited",
                                                            "score": 1,
                                                            "author": "havegravity"
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "Completely disagree about #2 - in fact, a system built as no-code and functioning properly is essentially a working prototype to build off of. It's like a working blueprint of interaction and database design - much less confusion as to the functionality, what's required, etc...",
                    "score": 2,
                    "author": "Biking_dude"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Where is your moat if anyone can reproduce your app for two months of a dev salary?\n\nIf you have any success, an org with actual engineering to develop hard to copy features will do what you do, and more.",
            "score": 16,
            "author": "_skndlous",
            "replies": [
                {
                    "level": 1,
                    "comment": "&gt; Where is your moat if anyone can reproduce your app for two months of a dev salary?\n\nIn this instance the moat is far more likely to be some combination of brand, customer relationships, and the network effect/value of signed-up job-seekers and employers.\n\nAs I just mentioned in another comment, consider the (admittedly extreme) example of Facebook. Building a fully-functional Facebook clone is fairly trivial. Adding 3 billion MAUs (and supporting that growth from both a technical and business perspective) is another thing entirely.",
                    "score": 2,
                    "author": "cosmictap",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "I'm taking out Facebook\nLook at my Facebook Alan Mollick",
                            "score": 0,
                            "author": "MammothAlbatross850"
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "That\u2019s fine, you don\u2019t need to be the leader to make it..you don\u2019t even need to be close to the leader. You know how many 9fig companies there are we\u2019ve never heard of, in spaces we\u2019re familiar with? That mindset can only hold people back imo",
                    "score": 1,
                    "author": "bumbaclotdumptruck"
                }
            ]
        },
        {
            "level": 0,
            "comment": "If you are going to outsource you still need a full-stack engineer on staff.   If you don't would will get back garbage code and not really have any idea what is going on. Your engineer will put out the reference docs for the design and backend. They will then be responsible for the quality control of incoming code and the over all running of the system.",
            "score": 3,
            "author": "darthnilus",
            "replies": [
                {
                    "level": 1,
                    "comment": "Depends who you outsource to. Which you won\u2019t be able to tell who is good or bad without a full stack engineer on staff",
                    "score": 2,
                    "author": "Alternative_Log3012"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Beyond the many questions I have about the business itself, I think you are asking the wrong question. \n\nThere is not enough information to accurately say whether low/no code is better then standard software development. But clearly if you can\u2019t deliver features customers need with current setup then you know your answer.",
            "score": 2,
            "author": "drunkfoowl",
            "replies": [
                {
                    "level": 1,
                    "comment": "The inherent problem with this sub is virtually nobody gives useful information with their questions because they want to protect their little secret.",
                    "score": 1,
                    "author": "Clean-Attempt-9370",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Correct. My original post went deeper into detail on the concept of non-tech founders asking for VC backing to manage tech hires, and with the flux of development talent available they really shouldn't have to ask these questions if they want VC's to take them seriously.\n\n&amp;#x200B;\n\nAlso, isnt this webex?",
                            "score": 1,
                            "author": "drunkfoowl"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "I would be wary of option No. 2. \n\nI like Bubble, I think it's neat and you can do a lot with it. But if nobody on your team is willing to learn it to a deep level, it's going to be as expensive as hiring a developer and you'll be stuck with more limitations and you'll still have to re-do everything at some point. I worked with a great Bubble dev on a project with the hope that my team could manage it after the fact, but it's not as simple as the \"no code\" lovers claim. When the dev moved on, it all went to shit. \n\nThere is a third option: hire a dev/contractor to build just the core functionality and manage connections to essential services like Drive/Typeform/whatever repository for your video assets.",
            "score": 2,
            "author": "FlorAhhh"
        },
        {
            "level": 0,
            "comment": "At some point you will have your first major engineering crisis.  One of the following will happen:\n\n* Site functionality is down and restarting services doesn't fix it\n* Someone reports a significant vulnerability that reveals a design flaw rather than just an easily corrected mistake\n* A customer calls in and their data is lost or inaccessible somehow\n\nIf you're relying 100% on agencies, your ability to respond to these existential threats is entirely dictated to you by the agency.  If fixing your app is more trouble than it's worth, they can and will just leave you high and dry - particularly if one of the founders has also worked on the site, so the agency can point the finger and say they're not to blame.\n\nAt a certain scale, the risk of having no technical people on staff just becomes unsupportable.  It's the same reason why companies beyond a certain size hire a general counsel rather than relying entirely on law firms.  You need someone whose whole job is to work on your stuff, and who isn't prioritizing it against competing business interests.\n\nHave you reached that point?  There's no way for me to know without a lot more information about your business.  But if you already have thousands of users, it seems like the time to stop ignoring technology risk will soon be at hand.",
            "score": 2,
            "author": "ghjm"
        },
        {
            "level": 0,
            "comment": "I have a bubble no-code web application that generates prompts from a simple statement to get instant and effective results from ChatGPT. \nhttps://promptaideas.com\nBubble is great to start, i have a background in programming, but because I could make it in 2 days with Bubble. I choose to start there and develop when the time and money is there. No reason to spend astonishing amounts on a developer if you can start in a week with 50 dollars spend.",
            "score": 2,
            "author": "OutcomeDear1471"
        },
        {
            "level": 0,
            "comment": "We had an issue scaling with bubble. Not only you can take your code someonewhere else, it bogs down when you get real users using it unless you pay a fortune for hosting. the pricing scales steeply.",
            "score": 2,
            "author": "Ok_Key_9403"
        },
        {
            "level": 0,
            "comment": "Investors don\u2019t care about the tech up to a point.  They care about money.  If you build on a low/no code platform, I don\u2019t see you getting funded by my angel group.  We\u2019re a bunch of engineers and we all have experience with people that don\u2019t emphasize engineering in their startup, an organization that should emphasize engineering.\n\nIf you let it slip that you hired an agency to build your app and service, I don\u2019t see you getting an investment from our group either.  In that case, you are just marketing.  Investors invest in innovation.  You are sales and marketing at that point.\n\nBring in an actual cto to lead development.",
            "score": 6,
            "author": "Longjumping-Ad8775",
            "replies": [
                {
                    "level": 1,
                    "comment": "But there are other investor orgs than yours\u2026",
                    "score": 6,
                    "author": "Alternative_Log3012",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "And I wasn\u2019t trying to be a douche.  Investors are like cats and there are a gazillion viewpoints.  I\u2019m just giving one based on internal discussions.",
                            "score": 3,
                            "author": "Longjumping-Ad8775",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "It does come across as a douche dev-elitist.  \n\nUnless the product is aimed at developers for their primary customers, a PRODUCT-led company always wins.  The OP is proving they have a demand and paying customers. That\u2019s traction the sings to investors.",
                                    "score": 1,
                                    "author": "Visual_Collar_8893",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "I\u2019ve seen the other side up close and personal.  It\u2019s not elitist to provide feedback based on practical experience and first hand knowledge.  I also tell people that you can do the opposite of what i suggest and you could be successful.",
                                            "score": 2,
                                            "author": "Longjumping-Ad8775"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "level": 2,
                            "comment": "Agreed.  I've watched millions get invested into startups that my group wouldn't touch with a ten foot pole.\n\nHowever, you are missing the point.  That is money.  I'm providing experience of multiple startups as well as investing, since I span both sides. and yes, two of the startups sold for fairly good returns.  one cratered straight into the ground, and one I had to eventually take out and shoot to put it out of it's misery.  I've also tried to help startups, so I answer a lot of questions on quora.  Reddit is a place where people are more interested in putting digs into each other.  I'm providing a look inside the minds of some investors.  Not everyone, just some.  I never claim that I represent anyone beyond me.  I've figured out my group and that took a while.  \n\nIf you want SV insight, I'm not going to give that to you.  if you want insight into investors that worry about things like product, marketing, sales off the beaten path but still in the US, I can give that to you.  \n\nRebuilding software, or hardware, costs money.  the longer your go down a path, the more it costs to get off of a given platform.  The stokholm syndrome of software is a very painful thing.  You can't make chicken salad out of chicken shyte in software.  \n\nUsing some development company sounds awesome.  Startups think they will get free safe sex for a few shilings.  It never works out that way, and I've got direct experience in this scenario.  It is the siren song to a nontechnical founder.  I've seen those ships smashed on the rocks and it isn't pretty.  They can't get off of the agency because they are price anchored.  $30/hr sounds awesome, if all privates are the same.  All privates are not the same.\n\nNo code tools are great for major organizations, corporations, governments.  it makes sense.  No code/low code is another siren song for nontechnical founders.  I get why.  Great for an MVP if you can't find someone technical.  Know the limitations.\n\nI stand with my suggestion to do everything to get a cfo that can actually build a product.  Nothing stops anyone from using a no code tool and interviewing customers with that as an mvp while also looking for a cto.  I think it's a good path, just know that a nocode solution is a throwaway and tell yourself that every time that you open it up to make a change.",
                            "score": 7,
                            "author": "Longjumping-Ad8775",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "A cfo is a Chief Financial Officer, hardly the person to handle your tech stack.  \n\nA CTO does not guarantee he/she would want to be in the weeds coding. \n\nHiring an engineer is what you really should be saying.",
                                    "score": 1,
                                    "author": "Visual_Collar_8893",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "Mistypes happen",
                                            "score": 5,
                                            "author": "Longjumping-Ad8775",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "Well I just hired a CFO and he just told me he\u2019s not coding my MVP. Stuff you original commenter.",
                                                    "score": 1,
                                                    "author": "Alternative_Log3012",
                                                    "replies": [
                                                        {
                                                            "level": 6,
                                                            "comment": "Important safety tip, never give a cfo access to source",
                                                            "score": 2,
                                                            "author": "Longjumping-Ad8775",
                                                            "replies": [
                                                                {
                                                                    "level": 7,
                                                                    "comment": "He agreed to this but fired back that he's not giving me access to any money.\n\nI hate business...",
                                                                    "score": 2,
                                                                    "author": "Alternative_Log3012",
                                                                    "replies": [
                                                                        {
                                                                            "level": 8,
                                                                            "comment": "Well, I\u2019ve never met a cfo that didn\u2019t think they were more qualified than you and I at everything.",
                                                                            "score": 2,
                                                                            "author": "Longjumping-Ad8775"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "level": 3,
                                    "comment": "I fully 1000% agree with what you said. You **will** have to rewrite it (hell, I'd even say \"write it\" since no-code), it's just a matter of how much time it'll take for your clients to realize your company is built upon a very shakey house of cards.",
                                    "score": 1,
                                    "author": "Lucacri"
                                }
                            ]
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "Same.",
                    "score": 1,
                    "author": "ryanmerket"
                },
                {
                    "level": 1,
                    "comment": "A cfo is a Chief Financial Officer, hardly the person to handle your tech stack.\n\nA CTO does not guarantee he/she would want to be in the weeds coding.\n\nHiring an engineer is what you really should be saying.",
                    "score": 0,
                    "author": "Visual_Collar_8893",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "CTO is what was meant.  Mistypes happen.\n\nIn a startup, the CTO is typically the first engineer hired.",
                            "score": 3,
                            "author": "Longjumping-Ad8775",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "In a startup the cto is typically the technical co founder. NOT the first engineer hired. Even in a startup without a cto, the first tech hire will likely be sr engineer who can start building the product.",
                                    "score": 4,
                                    "author": "ItchyTheAssHole",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "In my experience, the technical cofounder had best be writing code early on.  Titles meant very little during the early stages.  Technical cofounder, first engineering hire, bottlewasher, whatever.  In the early stages, you have someone to make it and someone to sell it.  Call them what you will.",
                                            "score": 3,
                                            "author": "Longjumping-Ad8775",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "that is correct",
                                                    "score": 1,
                                                    "author": "ItchyTheAssHole"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "[removed]",
            "score": 1,
            "author": "[deleted]",
            "replies": [
                {
                    "level": 1,
                    "comment": "Without the code, you won't have much to sell in a SaaS ;)",
                    "score": 1,
                    "author": "Lucacri"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Are there seriously \"agencies\" that will build a NO-code site? What has become of us? Next up: no design and no sales houses?",
            "score": 1,
            "author": "danjlwex",
            "replies": [
                {
                    "level": 1,
                    "comment": "I guess it's the next \"I have a fantastic tech company, but it's built in wordpress\"",
                    "score": 2,
                    "author": "Lucacri",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Or, \"I want a company, can you design an idea, mage a sure and stay selling it for me?\" \ud83d\ude09",
                            "score": 1,
                            "author": "danjlwex"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "The ideal scenario would be to stick to no code as long as you\u2019re solving the problem for your niche and growing / retaining customers",
            "score": 1,
            "author": "davedlr"
        },
        {
            "level": 0,
            "comment": "Have you considered hiring a contractor to build the features on top of your current solution (Typeform etc.) by integrating with their APIs.\n\nI think going to something like Bubble from where you are could be a side-step that you grow out of quickly.\n\nHowever, if you use a contractor to build something that can integrate with your current solution, you won\u2019t have to start from step one again, and you could reuse the additions when you eventually move to a real solution.",
            "score": 1,
            "author": "Choice_Intention7720"
        },
        {
            "level": 0,
            "comment": "get a fractional cto from a product agency. it looks better in front of investors. something international like eagerworks is cheaper",
            "score": 1,
            "author": "dvidsilva"
        },
        {
            "level": 0,
            "comment": "If you are this far and you proven your use case, how you build isn\u2019t a deal breaker. You don\u2019t need to overcomplicate the engineering side since your original MVP was very basic and proved it. \n\n\nYou should focus on getting to market as soon as possible. Use no-code and and at least some technical consultants(not some random sales rep from AWS) to understand the pros and cons and drive your initial product. If you outgrow it, the migration isn\u2019t big and you can hire your engineer and developers when you know the next wave of features and have customer demand to provide them and not waste money on things you aren\u2019t sure you need.",
            "score": 1,
            "author": "boxxa"
        },
        {
            "level": 0,
            "comment": "Lots of great answers! Basically, option 2 first, get traction, raise/grow, then option 1 then scale. Easy peasey what could wrong. Its very hard to sustain a moat made of tech these days so by starting to try to build a moat based on users, virality and engagement (and delaying investment in the tech stack) you might actually be doing yourself a massive favour.",
            "score": 1,
            "author": "Commercial_Carob_977"
        },
        {
            "level": 0,
            "comment": "If you are growing users and revenue on a platform that can be cut off, your future is always dependent on the stability of the platform as much as it is your business model. It\u2019s why proprietary software is attractive for investors. It\u2019s not just the potential of IP; it\u2019s the ability to keep your software up and running on your own as a team. \n\nI would split your efforts - some resources maintaining what you have so you have the revenue and customers for validation , and the rest of your resources on beginning to build your own ecosystem. It may feel slower and clunkier, but it\u2019s the only way to switch at this point without a lot of pain, either in lost time or money.",
            "score": 1,
            "author": "chickaboomba"
        },
        {
            "level": 0,
            "comment": "I agree with u/Competitive_Speech36. No code platforms like Bubble can be helpful to lunch your product and getting market feedback in a short period of time. \n\nOnce you start to get more users, you may see the performance and other issues. At that time it is really hard to deal with such issues in a code platform. For this, my suggestion is to hire technical partners and build from scratch using any framework. Here are a few benefits of this:\n\n\\- You will have the ownership of your own Code, and intellectual properties.\n\n\\- You can customize your application based on the user's needs. \n\n\\- You can find developers easily. \n\n\\- Once your app development is done, you can reduce your monthly recurring cost. \n\nGood Luck!",
            "score": 1,
            "author": "gkunwar"
        },
        {
            "level": 0,
            "comment": "Connecting jobseekers with employers \u201cusing video\u201d? So like a record-a-video-of-yourself hiring process? \ud83e\udd14interesting!\n\nI think my answer to those two routes depends on how much money you have. If you have $100K-$1M+ that you can spend over the next year or two then you could consider option 1 hiring your own team. You\u2019re at such an early stage though that things will change so fast, you\u2019ll want to get messy, and sometimes hiring the team that early can cause you to get stiff too early. Even if you have millions i\u2019d say save as much as possible for marketing and user acquisition.\n\nNo-code would be more lean, but I agree Bubble has limitations that make it frustrating to invest into because at some point all the little limitations build up and can become a slow, silent killer.\n\nHave you considered FlutterFlow? I did a lot of research before launching my app MVP and Bubble was advertised everywhere but FlutterFlow is way more scalable. As a UX strategist and UI designer I went for FlutterFlow because it\u2019s very flexible from a design perspective\u2026but what really sold me is that it\u2019s actually low-code software because you can add custom coded functionality to the project, you can even integrate GitHub repo\u2019s, and it\u2019s entirely scalable because at any point you can just download the clean Flutter/Dart code and then hire your own engineers to grow completely free of the platform. I\u2019d say I can build 97% of apps and then I hire UpWork developers for the remaining 3% of little features here and there.\n\nThis turned into a sales pitch for them haha, but honestly I was in your exact shoes last year and I\u2019ve been super happy with my choice for FlutterFlow. They\u2019re a little smaller so their support has been mediocre, but that\u2019s my only complaint so far.\n\nIf you\u2019d like, I\u2019d be happy to show you the apps I designed and developed with it. My MVP has gone through 4 distinct versions that I think paint a clear image for the power that flutterflow gives you to quickly iterate and learn.\n\nIf the platform makes sense for you, I might be open to collaborating with you on the design and development. I\u2019m mostly a UX/UI designer, but I\u2019ve really enjoyed developing apps lately!",
            "score": 1,
            "author": "Cartworthy"
        },
        {
            "level": 0,
            "comment": "I would advise getting 1-2 experienced (and talented) advisors in design and development. This will really save you couple of mistakes you can make, if you're not technical co-founders. \n\nOn a second note, I'd hire UX/UI Designer and full stack engineer to create the MVP, and share equity with them (with vesting period of 3-5yrs). Since you don't know what to look for, ask advisors to help with it. By having a strong product team onboard, you can satisfy investors in the next phase of your journey :) \n\nEveryone is saying that MVP should be lean \u2013 but don't get it wrong here: it shouldn't be shit. You can create very lean products that are better looking/working than other *not so lean* products.",
            "score": 1,
            "author": "robopobo"
        },
        {
            "level": 0,
            "comment": "Spend a week learning a basic web framework, then ask GPT-4, it can build a decent dev plan or requirements doc. Get a freelance dev to look over the document, then get gpt to write the code (MVP). If you get stuck get a decent dev (not bottom of the barrel freelancer) to fix, if it runs on sheets, slacks and forms it's trivial.\n\nCosts likely several times cheaper than a 'bubble agency' and one of the good is when you get funding there is no need to port bubble to code. That is going to be equivalent of a whole rewrite from scratch, huge waste of time and focus when you've just raised.\n\nIm a self taught so pretty basic level, I used to turn to a freelancer I had a relation with when I got stuck and it's not worth my time learning. Now I just ask chatgpt",
            "score": -2,
            "author": "erelim"
        },
        {
            "level": 0,
            "comment": "[removed]",
            "score": 0,
            "author": "[deleted]",
            "replies": [
                {
                    "level": 1,
                    "comment": "[removed]",
                    "score": 1,
                    "author": "[deleted]"
                }
            ]
        }
    ]
}