{
    "id": "13t58m2",
    "score": 15,
    "title": "Building a basic \"chat with a PDF\" app as my AI learning project",
    "author": "alfarez",
    "date": 1685187783.0,
    "url": "https://www.reddit.com/r/artificial/comments/13t58m2",
    "media_urls": [
        "https://www.reddit.com/r/artificial/comments/13t58m2/building_a_basic_chat_with_a_pdf_app_as_my_ai/"
    ],
    "other_urls": [
        "https://www.reddit.com/r/artificial/comments/137ha71/topics\\_i\\_should\\_learn\\_about/](https://www.reddit.com/r/artificial/comments/137ha71/topics_i_should_learn_about/)",
        "https://farez.me/how-to-create-a-chatbot-with-openais-api-a-general-architecture/).",
        "https://www.gov.uk/government/publications/form-an-guidance).",
        "https://preview.redd.it/ypoghebfke2b1.png?width=1732&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=a535df558c3cccb38965ea90e4844ef32982ad44",
        "https://twitter.com/farez/status/1654942532223086592)."
    ],
    "postText": "Earlier this month I decided to start learning how to build AI products in my free time. I asked everyone here what topics I should be learning and you guys gave some great suggestions: [https://www.reddit.com/r/artificial/comments/137ha71/topics\\_i\\_should\\_learn\\_about/](https://www.reddit.com/r/artificial/comments/137ha71/topics_i_should_learn_about/)\n\nIt's been quite a satisfying journey. And I turned it into a side project to help guide my learning - it's one of those \"Chat with a PDF\" apps and there are many of these out there. \n\nBased on what I've learned, I even wrote up a sort of [cheat sheet for building chatbots](https://farez.me/how-to-create-a-chatbot-with-openais-api-a-general-architecture/). And once you've learned the new ideas and components of an AI app, it's not that hard.\n\nThe project app uses OpenAI's API and I'm using their GPT-3.5-turbo model. I'm using their embeddings endpoint to create embeddings for the uploaded PDF content, and using the chat endpoint to ask the AI questions about the document.\n\nIn the requests to the API, I asked it to assume the role of \"an explanation bot that explains complex information in simple everyday English\".\n\nThe learning project actually turned into a half-decent app for interrogating PDFs. Even I myself was impressed with how useful a simple AI integration can be.\n\nTo test it out, I uploaded a long [PDF from the UK Home Office](https://www.gov.uk/government/publications/form-an-guidance). It's a document explaining how to apply for UK citizenship. Basically, a long and tedious document to read. Then I asked it a few questions.\n\nhttps://preview.redd.it/ypoghebfke2b1.png?width=1732&amp;format=png&amp;auto=webp&amp;v=enabled&amp;s=a535df558c3cccb38965ea90e4844ef32982ad44\n\nI liked how it summarised the answers and explained them back to me in simple English. Actually, I'm more of a bullet-point kinda guy so I would actually have preferred shorter answers in bullets. But this still saved me a tonne of time trying to read through the document.\n\nOnce I had the basic functionality working, then I tidied the frontend up a bit with some simple Tailwind classes. Instead of the usual chat box at the bottom, I decided to put it at the top and have the AI's responses appear below it.\n\nHere's the tech stack for this simple app:\n\n* Backend: Laravel + Nginx\n* Database: PostgresQL + pgvector extension\n* Frontend: Livewire + Tailwind\n* AI API: OpenAI / GPT-3.5\n\nI go into more detail about the above in a [Twitter thread](https://twitter.com/farez/status/1654942532223086592).\n\nFor an indie business like mine, building is just half the story. This weekend I'm going to try and turn it into a product an launch it. It'll be interesting to learn the business side of AI apps and this should give me a great start.\n\nSo this is my task this weekend - polish and launch this learning project as an actual product!",
    "comments": [
        {
            "level": 0,
            "comment": "Impressive that you did this entirely without langchain. I suggest you look into that library as it provides a TON of useful interfaces with not just openAI models but also a lot of huggingface and open source models, as well as multiple vectorstore solutions (including battle tested stuff like redux) beyond pinecone(which ive heard is expensive to scale)",
            "score": 2,
            "author": "Narrow-Importance65",
            "replies": [
                {
                    "level": 1,
                    "comment": "Ah, Langchain is high up on my list, so its really great to see you recommend it as well. And the great things is that it's open source too.\n\nPostgreSQL works great for me so far. I come from a MySQL background so it's easy for me to hop on it. And it already works well with Laravel, a framework that I use.\n\nBut at some point I will explore alternative vector storage solutions. I think we're just at the beginning here and I imagine there will be a lot more coming into the market.",
                    "score": 1,
                    "author": "alfarez"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Congratulations on all your progress! This looks like it would be useful for a lot of people.\n\nAre you doing any kind of tests (automated or otherwise) to check for errors? I know hallucinations are a big concern with LLMs, so I was just curious if you\u2019ve encountered that.\n\nGood luck with your business!",
            "score": 2,
            "author": "Socile",
            "replies": [
                {
                    "level": 1,
                    "comment": "Hey thanks for the reply. \n\nI have not yet carried out tests for errors but you're right, I will need to manage hallucinations somehow. Definitely a requirement if I'm going to turn this into a publicly available product.\n\nI'm not aware of any techniques to test it. Do you have any recommendations?",
                    "score": 2,
                    "author": "alfarez",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "As an old fashioned (non-AI) software engineer, I\u2019d say the normal best practice is to start with regression tests. Run some documents through your system and check the answers to as many questions as you can. You may need some complex parsing in your tests to find the part of the answer you care about, but that\u2019s all I can think of at the moment.\n\nAs you find corner cases that don\u2019t work and fix them, write new regression tests to verify that the fix stays good through improvements.",
                            "score": 1,
                            "author": "Socile",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "Yep, I can do that. Thanks!",
                                    "score": 1,
                                    "author": "alfarez"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "This kind of thing could be really useful for understanding Terms of Service. I'd love to ask questions like \"Does the service share my data?\", \"Does the service really delete my data when I request it?\", and \"Does the service track me?\".",
            "score": 2,
            "author": "kc3svj",
            "replies": [
                {
                    "level": 1,
                    "comment": "Thanks. And yes, you're right. Really useful for interrogating ToS and such like.",
                    "score": 1,
                    "author": "alfarez"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Not going to remove the post but I\u2019d like a little more participation before self-promo next time. Thanks.",
            "score": 2,
            "author": "jaketocake",
            "replies": [
                {
                    "level": 1,
                    "comment": "Understood, thanks!",
                    "score": 1,
                    "author": "alfarez"
                }
            ]
        },
        {
            "level": 0,
            "comment": "[deleted]",
            "score": 1,
            "author": "[deleted]",
            "replies": [
                {
                    "level": 1,
                    "comment": "No idea. Ask your friend! :)",
                    "score": 1,
                    "author": "alfarez"
                }
            ]
        }
    ]
}