{
    "id": "13efb3u",
    "score": 3,
    "title": "BU CS Questions",
    "author": "Opposite-Estate-4746",
    "date": 1683787466.0,
    "url": "https://www.reddit.com/r/BostonU/comments/13efb3u",
    "media_urls": [],
    "other_urls": [],
    "postText": " I heard the curriculum is mostly theory based, is that more so the case at BU compared to other schools or are most CS programs the same way as well? Im aspiring to become a software engineer, how much time would I have to dedicate to self-learning on top of college coursework since the coursework is so theory based?",
    "comments": [
        {
            "level": 0,
            "comment": "A lot of the better schools focus on theory over whatever framework is popular today. The idea is that the theory will always be relevant and will help you apply it to anything practical, but you will struggle after you graduate if you don\u2019t pick up some practical skills along the way.",
            "score": 3,
            "author": "msondo"
        },
        {
            "level": 0,
            "comment": "While you consider studying CS, I\u2019d also like to recommend considering CE in the ENG dept. if you can stomach a few physics classes, it was a really cool way of differentiating myself from the general CS SWE pool when looking for jobs.",
            "score": 3,
            "author": "verilogBlows",
            "replies": [
                {
                    "level": 1,
                    "comment": "Is Comp Eng at BU for focused on the practical side of things and helps you better prepare for a job? Or is it just as theory based?",
                    "score": 1,
                    "author": "Opposite-Estate-4746",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "CE @BU, coming from a CE major (co\u201923), is more hands-on experience with collaboration that helps you better prepare for collaboration in the real world. we learn theory, since it\u2019s the foundation for everything, but we also have the application part in our mandatory labs the first 3 years of undergrad (up until 413, computer organization). CE majors differ from CS majors because we learn both the hardware AND software of computers. As an upperclassmen, definitely recommend taking EC 530 (software engineering principles) as an elective \u2026 it\u2019s a good course that paves the way for what you\u2019ll see from design to implementation as a Software Engineer.",
                            "score": 2,
                            "author": "jay-wazowski"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "Your education is what you make of it. BU has prestige to its name and there are plenty of extracurricular opportunities here. Snag a good summer internship and work on some personal projects and you will be able to succeed without a doubt. Lots of software engineering jobs do training with new employees, you are not expected to do everything off the bat.",
            "score": 2,
            "author": "BUowo"
        },
        {
            "level": 0,
            "comment": "Just wanted to add a question to this to anyone who may know the answer: is BU CS also very math-heavy?",
            "score": 2,
            "author": "Lethal_Perfectionist",
            "replies": [
                {
                    "level": 1,
                    "comment": "Ya for the most part most semesters will be a cs course that\u2019s rooted in math + a more practical course with more applicable skills.\n\nLike semester 1 is normally:\nCs 111- intro to programming \nCs131 - combinatorics structure (lots of math proof)\n\nSemester 2:\nCs 112: programming 2 in Java + data structures ( more programming concepts and calculating runtimes for your code)\nCs 132: geometric algorithms ( linear algebra and matrices pretty much)\n\nSemester 3:\nCs210: computer systems ( how code is built up from binary to higher level functions - more in-depth understanding of code)\nCs237: probability in computer (more math)\n\nSemester 4:\nCs 320: concepts of programming language (high level concepts and functions that are used in code, hard shit Ngl)\nCs330: Algorithms (if you like problem solving this is a lot of fun but it is hard. Teach you different algorithms like dijkstra, bellman ford, bfs dfs etc and then you have to create algos using them)\n\nAnd so on, tho depending on your interests it either gets more mathy or more codey",
                    "score": 2,
                    "author": "TonightSouth5357"
                }
            ]
        },
        {
            "level": 0,
            "comment": "All CS curriculums are theory based. They\u2019re supposed to be. If you want applications, pursue an engineering or IT field.",
            "score": 1,
            "author": "Acrocane"
        },
        {
            "level": 0,
            "comment": "honestly depends how good you are with the material. Some people get it reasonably easy and don't spend a lot of outside time learning. Others like myself spend a fair share of our free time studying and going to office hours. Homework load varies from class to class but for the most part it is a lot more than a lot of the other majors. As far as BU, you won't be taking any specialized software engineering classes until your late sophmore/junior year because of all of the pre reqs. If software engineering is your main goal you will be fine in cs, but I would definitely look into computer engineering as well.",
            "score": 1,
            "author": "urgrandmasshoes"
        }
    ]
}