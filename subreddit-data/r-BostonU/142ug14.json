{
    "id": "142ug14",
    "score": 8,
    "title": "For any CS grads, how many leetcode problems did you solve before feeling confident in your coding interview skills",
    "author": "ParkingLiving9433",
    "date": 1686088274.0,
    "url": "https://www.reddit.com/r/BostonU/comments/142ug14",
    "media_urls": [],
    "other_urls": [],
    "postText": "I know I can ask r/CS career questions but why not ask my peers instead? Extra helpful if you can share how many questions you answered before receiving an offer, and the breakdown of easy medium and hard problems",
    "comments": [
        {
            "level": 0,
            "comment": "It depends on how many it takes for you to grasp the pattern and the concept. This varies from person to person, but a good 10-15 questions on major topics should do the trick.",
            "score": 7,
            "author": "Unteened"
        },
        {
            "level": 0,
            "comment": "I bought premium and reviewed the commonly asked questions for each individual company. \n\nEnded up completing ~25 interviews and got 5 offers, most asked LC easy to medium.",
            "score": 6,
            "author": "SamPom100",
            "replies": [
                {
                    "level": 1,
                    "comment": "Wow that\u2019s a lot. Well played",
                    "score": 1,
                    "author": "dihydrogen9monoxide"
                },
                {
                    "level": 1,
                    "comment": "When you say \"easy to medium\" do you mean that you didn't receive any hard questions. Were all the questions you got easy and medium?",
                    "score": 1,
                    "author": "TheseLengthiness1570",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "yup. it\u2019s pretty rare for newgrads to get LC hard / system design (outside prop shops)",
                            "score": 1,
                            "author": "SamPom100"
                        }
                    ]
                },
                {
                    "level": 1,
                    "comment": "Wow of the 5 offers you got any of them are like fanng or big tech? Do big techs not ask lc hard?",
                    "score": 1,
                    "author": "t_wu",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "yes faang, that\u2019s where I\u2019m going as a newgrad. they were all great tech companies. big tech doesn\u2019t usually ask LC hard unless you\u2019re mega unlucky (it\u2019s up to the interviewer)\n\nonly people that do are the quant traders, citadel, optiver, hrt gave LC hards",
                            "score": 1,
                            "author": "SamPom100"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "I did 3 honestly and was convinced this is some bs. Luckily the company i work for now didnt ask any leetcode based questions. There is a repository of companies that do not ask leetcode questions in interviews somewhere on the r/csmajors subreddit",
            "score": 3,
            "author": "sarctechie69"
        },
        {
            "level": 0,
            "comment": "I would check out https://github.com/poteto/hiring-without-whiteboards, a list of companies that allow interviewing through non-leetcode methods. The company I'm at now offers the choice of a Leetcode screen + Leetcode onsite or a take-home assessment that we extend upon live during the onsite interview. I personally love take-homes since they're the most accurate reflection of my skills (Android developer, which is a pretty unique niche that requires knowledge not covered in Leetcode), but a lot of people are also opposed to them because they're more time-consuming.\n\nAlso, any respectable company cares more about *how* you solve Leetcodes and not *if* you solve Leetcodes. I've hired people that never reached an \"acceptable\" solution because they clearly verbalized their thought process during the interview and they're obviously a strong collaborator that can accept and apply feedback. I've also rejected people that reached an \"acceptable\" solution because they couldn't properly explain what they were doing, why they were doing it, or what alternatives exist. Leetcode interviews are equal parts technical and soft skills, but a lot of the people complaining about Leetcode interviews being impossible are focusing too much on the technical.",
            "score": 3,
            "author": "AmericanFromAsia"
        },
        {
            "level": 0,
            "comment": "0",
            "score": 2,
            "author": "maxcooper69"
        }
    ]
}