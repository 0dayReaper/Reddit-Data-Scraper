{
    "id": "u8fvvi",
    "score": 12,
    "title": "Opinions about the different intro to CS tracks at Brown",
    "author": "[deleted]",
    "date": 1650517664.0,
    "url": "https://www.reddit.com/r/BrownU/comments/u8fvvi",
    "media_urls": [],
    "other_urls": [
        "https://cs.brown.edu/degrees/undergrad/whatcourse/](https://cs.brown.edu/degrees/undergrad/whatcourse/)"
    ],
    "postText": "Brown CS has quite a few options in the intro courses track: [https://cs.brown.edu/degrees/undergrad/whatcourse/](https://cs.brown.edu/degrees/undergrad/whatcourse/) .\n\nI watched the video too where each professor pitch their own class and why it is the best. But I am still in doubt. I want to hear directly from people who have taken them. Some new courses have been introduced. So there will be fewer opinions about them. Still, I want to know how the courses you took have helped you in becoming:\n\n1. A better programmer (cured you of spaghetti/patch coding) (first time to coding?)\n2. A better problem solver (thinking about a problem and arriving at a correct elegant solution)\n3. Why do you like that course(s)?",
    "comments": [
        {
            "level": 0,
            "comment": "Hey there! Took CS17 so here are my opinions:\n\nCS 17 focuses more on functional programming than object oriented. For me, 17 drilled in how to think like a programmer and forced me to change my thinking as well. Definitely harder than 15 but also more collaborative. A lot of it deals with recursion, runtime, organization, and style. Many people who hated recursion came out of this class being able to do it consistently. A large portion of projects deal with organization, style, and testing, so it really forces you to do everything. Only critique is that you have to learn Racket and ReasonML, which you will probably never use ever again, and that some assignments were pretty hard.\n\nI'd say it prepared me really well for later courses and also encourages collaboration more than 15 and 19 (I think) so I met many people in this class to work with in future courses. I liked it a lot because in hindsight, it really drills in how to think and organize like a programmer.\n\nAs for what I've heard through the grape vine about the other courses:\n\nCS 15: Very object oriented and probably the most fun out of the intro sequences. A lot of making cool little games and projects. Works mostly with Java I think. Many people who took this class really enjoyed it and said it prepared them well for other CS courses down the line. Will say I heard that students didn't collaborate as much (at least from my friend's experience). \n\nCS 19: This class required a placement portion when I thought about taking it. From what I've heard, this class is very intense and purposefully designed so that students who are more competitive would take this course instead of the other intro sequences, so that other sequences can deal with drilling in fundamentals and have an overall more friendly environment. Unfortunately, because a majority of Brown students take 15 or 17, might make it hard for you to find people to stick with for other classes down the line. Otherwise, I've heard the professor is really good and the class is really strong!",
            "score": 12,
            "author": "butterb0bo",
            "replies": [
                {
                    "level": 1,
                    "comment": "CS200 is the go to now after CS17 and CS15. CS18 is discontinued right? How was CS200?",
                    "score": 4,
                    "author": "[deleted]",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "This is the first sem cs20 was taught. Here\u2019s what i gathered from my friends who are currently taking it: \u201cwtfffffffffff?????????????????\u201d",
                            "score": 6,
                            "author": "RxnPlumber",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "wtf in a good sense or bad?",
                                    "score": 3,
                                    "author": "[deleted]",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "It\u2019s a brand new course funneling students from four very different intro cs experiences.\n\nI\u2019d imagine it to be a shit show, but I\u2019m not taking the course, so take what i say with a grain of salt\n\nAlso expect kathi to iron out the flaws over the summer. Next year\u2019s course is probably going to be better than this sem",
                                            "score": 7,
                                            "author": "RxnPlumber",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "So it was all over the place like a first offering usually is, right?",
                                                    "score": 5,
                                                    "author": "[deleted]"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "level": 2,
                            "comment": "This is also biased since I've never taken the class but I know many people who TA the course and a few that are taking it right now.\n\nCS 200 is ok. There are assignments from both 16 and 18 that are in this course. As this is the first year that it is being ran, its a little bit of a mess, but things are constantly improving. The professors cancel labs when student complain about high workload, and because the class is massive, there's a bit team of TAs to help as well (in case you didn't know, TA culture in the CS department is massive and most students go to TA hours over Prof Office hours for most courses).\n\nAs for the actual class, it focuses on covering different data structures from mutable and immutable lists to hashmaps and dynamic programming. Some of the assignments are harder than their cs 16/18 counterpart, and some are way easier. The class tries to teach 2-3 languages (Java, Python, and maybe Pyret if you're from 15) in one year depending on which track you can from, and that can be a bit intense for many. There were lots of complaints of certain assignments being too hard and grading being too strict. The class heavily emphasizes on thorough testing and good style so it can be pretty frustrating to lose a bunch of points because you didn't test certain edge cases or didn't use a data structure.\n\nStill, from what I hear from the TAs, I think they expect the course to get better over the next few years, as the professors and TAs listen very carefully to feedback and as long as the complaints are not malicious, they tend to be pretty lenient on assignments and grading. Still, whether or not it will improve enough to your liking by the time you enter will depend.",
                            "score": 1,
                            "author": "butterb0bo"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "i can only speak for CSCI 0150 so i\u2019ll give some of my thoughts on it! (took last semester)\n\n1. i would say that if you\u2019re a first-time coder (which it doesn\u2019t seem like you are), this class is excellent for targeting spaghetti coding almost right off the bat since the curriculum is constructed around OOP design and thus serves as a great intro to not just code but code structure and organization (more heavily enforced as the course goes on). even if you have a solid foundation in CS, it\u2019s a great course for gaining OOP design skills, so i simply can\u2019t imagine you wouldn\u2019t come out of that class a better programmer.\n\n2. any CS course should help you become a better problem solver! this class is structured specifically around projects due every week/few weeks (which are always fun and interactive since you get practice with javaFX) that help you think in terms of new concepts taught in class, so you\u2019re certainly put in a position to think about a problem and arrive at the correct solution in an elegant manner.\n\n3. this was probably my favorite class i\u2019ve ever taken? it\u2019s just incredibly enjoyable with a lovely TA staff that helps make everything feel more relevant and relatable. everyone\u2019s gonna have a different experience, so perhaps i\u2019m biased in that i had a really great time there, but i really think it\u2019s a class everyone can benefit from! all of this being said, i think your choice should also factor in what you already know. have you already picked up OOP skills through your own experience? check out functional programming with CSCI 0170 instead! or maybe you wanna jump into 0300+ level CS classes quicker and take a single-course intro series, in which case CSCI 0190 would be ideal, etc",
            "score": 5,
            "author": "cheesyfrogs"
        },
        {
            "level": 0,
            "comment": "Hello!  I recommend you take CS19!  I spoke about my experience taking the class in this comment: https://www.reddit.com/r/BrownU/comments/t4u6f4/brown_cs_how_fruitful_was_taking_cs019_over_other/hz116jy/?utm_source=share&amp;utm_medium=ios_app&amp;utm_name=iossmf&amp;context=3  \n\nWelcome to answering any questions about CS19 if you want!",
            "score": 4,
            "author": "aurreco",
            "replies": [
                {
                    "level": 1,
                    "comment": "CS19 is very functional focused (so it seems from its website). Functional paradigm is less used throughout the rest of the CS curriculum. How does your experience translate to other paradigms? Say Python/MATLAB for AI/ML or C for systems.\n\nDid your problem solving capacity improve after 19?",
                    "score": 2,
                    "author": "[deleted]",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Wait, I just realized\u2026 you are the person who I originally commented to in the link I shared.. WHOOPS.\n\nI wouldn\u2019t say the functional paradigm is completely abandoned in the Brown CS curriculum after the intro courses\u2014 its just relegated to more theoretical classes.  For example CSCI 1730 is all about design and analysis of \u201csystems\u201d (vague but I think it just means anything represented as a finite stare machine) and its projects are in a functional language developed by the course instructor (i think its name is Forge)\n\nAnyway Python and ML are highly functional languages, and the language created for cs19 was modled somewhat after python syntax to make transitioning between the two languages easier (there is even a whole appendix for this transition in the course textbook DCItC).  So being steeped in the bowels of functional programming should be highly beneficial for those languages.\n\nAs for C: there is not a way to feasibly write functional code or design programs without the use of state\u2014 its literally impossible.  But I contend that the \u201cdesign recipe\u201d enforced throughout the course DOES transfer and lends itself to good practices even in imperative code.  But it will be an adjustment for sure\n\nYes, my problem solving capacity increased by taking cs19.  Every single project in that class you spend more time thinking about how to write the code than actually writing it (god forbidding you dont hit some nasty bug) and these are not trivial projects.  It trains your mind to break problems down and make it easier on yourself.  You are also conditioned to abstract your solutions so they can work for even more general cases!",
                            "score": 4,
                            "author": "aurreco",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "IIRC from your past comments that you had some experience in imperative languages before coming to Brown, right?\n\nI asked about transferable skills because I don't want a course with a popular language that teaches its syntax and I solve some mindless small function-filling problems and I come out with no real transferable skills. College is all about building skillsets. A skill, a capability which you can apply in a different setting.  \n\n\nBTW, I know it would be nice if your parent document about the detailed review is posted as chunkwise comments directly in Reddit. Maybe helpful for all students with similar questions. Directly comes up in search feed.",
                                    "score": 3,
                                    "author": "[deleted]"
                                },
                                {
                                    "level": 3,
                                    "comment": "Btw, I didn't mean to say functional paradigm is completely abandoned. It is just less used for whatever reasons.",
                                    "score": 1,
                                    "author": "[deleted]"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "I'm a 2016 grad, just finishing up my phd in CS atm. not sure if the curricula have changed since then...\n\nI took CS19 and do not regret it. CS19 will get you thinking computationally and expose you to new ideas more quickly than the other tracks. The CS15/16 curriculum is outdated IMHO.",
            "score": 5,
            "author": "skainswo",
            "replies": [
                {
                    "level": 1,
                    "comment": "Tell Shriram I say hi!",
                    "score": 3,
                    "author": "skainswo"
                },
                {
                    "level": 1,
                    "comment": "May I ask about your PhD domain?\n\nCS19 claims to be accelerated. In that fast pace does it miss out on any important topics? How did CS19 prepare you for later courses?",
                    "score": 2,
                    "author": "[deleted]",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "Yeah, I work on ML/robotics. I did an APMA-CS major at Brown.\n\nYou're not going to miss out on anything important by taking 19. Whatever intro course you take, you'll be filling in whatever gaps you need to later. For me, it was best to simply be exposed to the greatest number of ideas as quickly as possible.\n\nDon't fret about \"spaghetti code\" or style for now. You're not going to learn modern software engineering practices from any of the courses anyhow. That'll mostly be learned through internships/jobs down the line. It's important stuff, but it just doesn't exist in any course AFAIK.",
                            "score": 3,
                            "author": "skainswo",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "I want to be able to come out of the course with the skill of solving a problem computationally and building a working solution in code of the same. May not be the most efficient, but working correctly. And not be intimidated by complex problems, but tackling them systematically.\n\n&amp;#x200B;\n\nSince you are a 2016 grad I think Pyret was not the language of the course then?",
                                    "score": 2,
                                    "author": "[deleted]",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "CS19 goes the hardest on systematic problem solving. The instructor is the coauthor of a major textbook on systematic problem solving (How to Design Programs), and his PhD students (I'm one of them) do research on helping students learn systematic problem solving. You'll learn to tackle complex problems in CS19, and you'll make it look easy. As a point of reference: consider that the assignments from this course are used as the comprehensive exam of *grad* students.\n\n[The course used Pyret in 2016.](https://cs.brown.edu/courses/cs019/2016/software.html)",
                                            "score": 7,
                                            "author": "jswrenn",
                                            "replies": [
                                                {
                                                    "level": 5,
                                                    "comment": "Not OP.\n\nWow didn't know this thing about the assignments.",
                                                    "score": 3,
                                                    "author": "[deleted]"
                                                }
                                            ]
                                        },
                                        {
                                            "level": 4,
                                            "comment": "I have used pyret, though not in CS19! In fact I prototyped one of the first pyret compilers with Joe way back when",
                                            "score": 2,
                                            "author": "skainswo"
                                        }
                                    ]
                                },
                                {
                                    "level": 3,
                                    "comment": "If you don't mind can you share your portfolio/webpage or some of the works you have done, code you have written during your PhD?",
                                    "score": 1,
                                    "author": "[deleted]",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "https://samlikes.pizza",
                                            "score": 3,
                                            "author": "skainswo"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}