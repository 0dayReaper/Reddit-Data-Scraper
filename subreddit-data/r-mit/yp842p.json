{
    "id": "yp842p",
    "score": 5,
    "title": "Is there a course if x86 assembly on ocw or mitx?",
    "author": "noonecares__-_",
    "date": 1667873144.0,
    "url": "https://www.reddit.com/r/mit/comments/yp842p",
    "media_urls": [],
    "other_urls": [],
    "postText": "",
    "comments": [
        {
            "level": 0,
            "comment": "Not that I'm aware of - x86 specifically is crazy complex. Assembly in general is covered in some classes, using either imaginary CPUs or older (simpler) ones, but not x86. Is there some reason you're looking for an x86 class? Most of the basic principles of assembly don't really depend on what architecture you mean. I learned assembly on 6502 and had very little difficulty moving from there to MIPS and ARM.",
            "score": 6,
            "author": "WaitForItTheMongols",
            "replies": [
                {
                    "level": 1,
                    "comment": "Well there isn't any special reason as to why I want to learn x86 other than my system specs(linux + intel). In that case do you know if it is possible to take any other course that is assembly focused on ocw or edx?",
                    "score": 2,
                    "author": "noonecares__-_",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "What is it that you want to do with assembly?\n\nAssembly is more of a tool than anything else. If I went to plumbing school, I wouldn't expect to have a class called \"Wrenches\", I'd expect to maybe have \"Tool maintenance\" or \"Safe tool handling\" or \"Pipe-to-tool compatibility\", each of which would handle wrenches in different ways. People use Assembly for reasons that matter for the use case they're doing. Are you wanting to develop extremely high-performance code? Are you wanting to decompile executables? Are you debugging an obscure error and you think the compiler is making a mistake? There's all sorts of reasons you might end up needing to dive into assembly, but the reason will end up dictating the best way to learn.",
                            "score": 6,
                            "author": "WaitForItTheMongols",
                            "replies": [
                                {
                                    "level": 3,
                                    "comment": "I just wanted to learn it for high performance code and reverse engineering. I will end up using it with C mostly",
                                    "score": 2,
                                    "author": "noonecares__-_",
                                    "replies": [
                                        {
                                            "level": 4,
                                            "comment": "Okay, then you might be best served with: https://ocw.mit.edu/courses/6-172-performance-engineering-of-software-systems-fall-2018/video_galleries/lecture-videos/",
                                            "score": 6,
                                            "author": "WaitForItTheMongols"
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}