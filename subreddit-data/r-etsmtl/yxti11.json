{
    "id": "yxti11",
    "score": 5,
    "title": "Quels th\u00e8mes et tailles de Projet de Fin d'\u00e9tude incluant du logiciel avez-vous d\u00e9j\u00e0 vu/fait?",
    "author": "duchainer",
    "date": 1668699813.0,
    "url": "https://www.reddit.com/r/etsmtl/comments/yxti11",
    "media_urls": [],
    "other_urls": [
        "https://www.etsmtl.ca/etudes/cours/LOG795"
    ],
    "postText": "Salut, je viens de me faire inscrire aujourd'hui au PFE [ https://www.etsmtl.ca/etudes/cours/LOG795 ] pour l'hiver 2023.\n\nJe me demandais quel genre et taille de projets que vous avez d\u00e9j\u00e0 vu pass\u00e9 cette session et/ou les pr\u00e9c\u00e9dentes. \n\nJ'aimerais me trouver un projet qui touche au moins un peu \u00e0 du langage fonctionnel ou \u00e0 des tests automatis\u00e9s, mais j'imagine qu'il y n'y a pas de tout.\n\nDans tous les cas, bonne semaine \u00e0 vous. \\^\\^",
    "comments": [
        {
            "level": 0,
            "comment": "\u00c7a d\u00e9pend des propositions soumises par les promoteurs et finalement accept\u00e9es par le d\u00e9partement. Le processus est expliqu\u00e9 sur [ce petit site web](https://fuhrmanator.github.io/gtilog795-web/).",
            "score": 2,
            "author": "fuhrmanator",
            "replies": [
                {
                    "level": 1,
                    "comment": "Merci, \u00e7a r\u00e9ponds en partie \u00e0 mes questions. Donc on choisis les 3 sujets qui nous int\u00e9resse le plus si on a pas d\u00e9j\u00e0 un projet et une \u00e9quipe de 4, \u00e7a a du sens.",
                    "score": 3,
                    "author": "duchainer",
                    "replies": [
                        {
                            "level": 2,
                            "comment": "C'est maintenant 5 choix je crois, sinon tu r\u00e9sumes bien",
                            "score": 3,
                            "author": "fuhrmanator"
                        }
                    ]
                }
            ]
        },
        {
            "level": 0,
            "comment": "Voici 2 projets que j\u2019ai d\u00e9j\u00e0 soumis dans le pass\u00e9 et que j\u2019ai supervis\u00e9:",
            "score": 2,
            "author": "pldelisle",
            "replies": [
                {
                    "level": 1,
                    "comment": "Conception d\u2019une application Web permettant de mettre en file d\u2019attente des t\u00e2ches GPU\n\nLe projet constitue en la conception et l\u2019impl\u00e9mentation d\u2019une application Web permettant de mettre en file d\u2019attente des t\u00e2ches n\u00e9cessitant l\u2019allocation d\u2019un GPU.\n\nLe d\u00e9partement LOG/TI a plusieurs serveurs destin\u00e9s \u00e0 la recherche sur lesquelles plusieurs \u00e9tudiants des cycles sup\u00e9rieurs se connectent afin d\u2019ex\u00e9cuter des scripts pouvant n\u00e9cessiter plusieurs heures de calcul. Ces scripts d\u2019apprentissage machine, g\u00e9n\u00e9ralement des scripts Python ou Matlab, n\u00e9cessitent tr\u00e8s souvent l\u2019utilisation d\u2019un ou plusieurs GPU afin d\u2019augmenter la vitesse de traitement. L\u2019optimisation des hyperparam\u00e8tres des mod\u00e8les d\u2019apprentissage machine n\u00e9cessite souvent le simple changement d\u2019un param\u00e8tre du script et de multiples ex\u00e9cutions avant de parvenir \u00e0 un mod\u00e8le optimal. Or, ces cartes graphiques constituent une ressource dispendieuse allant jusqu\u2019\u00e0 plusieurs milliers de dollars l\u2019unit\u00e9 et par cons\u00e9quent plut\u00f4t rare. C\u2019est pourquoi on se doit d\u2019optimiser le rendement de ces cartes.\n\nLe but de ce projet de fin d\u2019\u00e9tudes serait alors de cr\u00e9er une application Web permettant aux utilisateurs inscrits sur le serveur de se connecter avec leur compte Linux et de cr\u00e9er des \u00ab\u2009jobs\u2009\u00bb qui s\u2019ajouteront \u00e0 une file d\u2019attente. Ainsi, l\u2019utilisateur pourra planifier l\u2019ex\u00e9cution de ses scripts qui s\u2019ex\u00e9cuteront selon une file d\u2019attente \u00ab\u2009First-in first-out\u2009\u00bb (FIFO), maximisant l\u2019utilisation des GPU et \u00e9liminant les temps morts entre les ex\u00e9cutions. L\u2019utilisateur se verra aussi attribuer un maximum de \u00ab\u2009jobs\u2009\u00bb pour permettre aux autres utilisateurs d\u2019avoir du temps GPU. L\u2019utilisateur pourra consulter par le biais d\u2019une interface conviviale la file d\u2019attente sur le serveur ainsi que sa propre liste de \u00ab\u2009jobs\u2009\u00bb. \n\nL\u2019utilisateur pourra, \u00e0 l\u2019aide d\u2019un formulaire, entrer le chemin de son script ainsi que les arguments de celui-ci. L\u2019application Web se chargera ensuite d\u2019ex\u00e9cuter le script jusqu\u2019\u00e0 sa terminaison et passera \u00e0 la prochaine ex\u00e9cution inscrite dans la base de donn\u00e9es. Cette derni\u00e8re pourrait \u00eatre une simple base de donn\u00e9es orient\u00e9e documents comme MongoDB. \nDans un premier temps, l\u2019\u00e9quipe de travail devra proc\u00e9der \u00e0 la conception des diff\u00e9rents modules de l\u2019application Web afin de mettre en application les notions de conception et d\u2019architecture logicielle vue lors de la formation au Baccalaur\u00e9at. L\u2019\u00e9quipe devra \u00e9galement proc\u00e9der \u00e0 la conception du sch\u00e9ma de la base de donn\u00e9es orient\u00e9e documents. \n\nDans un second temps, l\u2019\u00e9quipe devra faire l\u2019impl\u00e9mentation de l\u2019application. Celle-ci sera programm\u00e9e soit dans le langage Java avec le cadriciel Web Spring ou en Python\u00a03.7 avec le cadriciel Web Flask. Lorsque la portion back-end REST sera termin\u00e9e, test\u00e9e et jug\u00e9e fonctionnelle, l\u2019\u00e9quipe de travail aura \u00e0 concevoir et impl\u00e9menter une application servant d\u2019interface utilisateur (front-end) simple et moderne afin d\u2019interagir avec l\u2019application back-end. La portion front-end pourra \u00eatre impl\u00e9ment\u00e9e avec le cadriciel pr\u00e9f\u00e9r\u00e9 de l\u2019\u00e9quipe de travail tel que React ou VueJS. La portion front-end communiquera avec l\u2019application back-end uniquement par l\u2019API d\u00e9velopp\u00e9 \u00e0 l\u2019interne (architecture 3-tier). Ainsi, les deux applications seront d\u00e9coupl\u00e9es. \n\nUne attention particuli\u00e8re devra \u00eatre apport\u00e9e sur la robustesse de l\u2019application. Celle-ci devra \u00eatre tol\u00e9rante aux fautes, test\u00e9e \u00e0 l\u2019aide de tests unitaires afin de pr\u00e9venir des comportements erratiques et jug\u00e9e suffisamment stable pour \u00eatre d\u00e9ploy\u00e9e sur des serveurs de production. Des m\u00e9canismes de r\u00e9silience devront \u00eatre mis en place afin que l\u2019application recouvre d\u2019une erreur non planifi\u00e9e et puisse repartir une ex\u00e9cution non compl\u00e9t\u00e9e. \n\nLe promoteur sera disponible sur place \u00e0 l\u2019\u00c9TS durant la dur\u00e9e du travail. Un groupe Slack sera cr\u00e9\u00e9 afin de promouvoir la communication. Le code source sera g\u00e9r\u00e9 sur la plateforme en ligne GitHub au moyen d\u2019un r\u00e9pertoire priv\u00e9. Une \u00e9quipe d\u2019au minimum 4 personnes devra \u00eatre constitu\u00e9e pour le projet. Les membres sont libres d\u2019utiliser l\u2019outil qu\u2019ils pr\u00e9f\u00e8rent afin de faire la gestion de projet (Atlasssian JIRA est sugg\u00e9r\u00e9 et pourra \u00eatre fourni gratuitement par le promoteur). \n\nExpertise requise\u00a0:\n\nProgrammation Python\u00a03.7 et Python Flask ou Java et Spring avec au moins un cadriciel front-end (ReactJS, VueJS, BootStrap)  \nExp\u00e9rience en Linux (Debian ou Red Hat Enterprise Linux). \nExp\u00e9rience avec Docker est un atout  \nInt\u00e9r\u00eat et exp\u00e9rience envers la programmation Web  \nInt\u00e9r\u00eat envers les m\u00e9canismes de r\u00e9silience logiciel et \u00abTest Driven Development\u00bb (TDD)",
                    "score": 4,
                    "author": "pldelisle"
                },
                {
                    "level": 1,
                    "comment": "Conception d'une application Web permettant la cr\u00e9ation d'un ensemble de donn\u00e9es de genres musicaux avec Spotify\n\nLe projet constitue en la conception et l\u2019impl\u00e9mentation d\u2019une application Web permettant d\u2019extraire des caract\u00e9ristiques de fichiers musicaux provenant de Spotify.\n\nJusqu\u2019\u00e0 aujourd\u2019hui, un des ensembles de donn\u00e9es disponibles afin d\u2019\u00e9tudier des algorithmes d\u2019apprentissage machine est le Million Song Dataset (https://labrosa.ee.columbia.edu/millionsong/). Cependant, l\u2019acc\u00e8s aux fichiers audio n\u2019est plus support\u00e9 depuis plusieurs ann\u00e9es et les morceaux qui le constituent se font de plus en plus vieux et, par cons\u00e9quent, moins repr\u00e9sentatifs des genres musicaux d\u2019aujourd\u2019hui. Cette application Web serait pour l\u2019\u00c9TS un moyen de s\u2019\u00e9tablir dans la communaut\u00e9 de la recherche sur l\u2019apprentissage automatique de genres musicaux en forgeant son propre ensemble de donn\u00e9es construit dynamiquement, accessible par une application Web, permettant d\u2019\u00e9couter les fichiers qui le constitue sur une plateforme actuelle (Spotify).\n\nDans un premier temps, l\u2019\u00e9quipe de travail devra proc\u00e9der \u00e0 la conception des diff\u00e9rents modules de l\u2019application Web afin de mettre en application les notions de conception et d\u2019architecture logicielle vue lors de la formation au Baccalaur\u00e9at. L\u2019\u00e9quipe devra \u00e9galement proc\u00e9der \u00e0 la conception du sch\u00e9ma de la base de donn\u00e9es relationnelle qui stockera les informations des vecteurs de caract\u00e9ristiques, des artistes, albums et morceaux musicaux. \n\nDans un second temps, l\u2019\u00e9quipe devra faire l\u2019impl\u00e9mentation de l\u2019application. Celle-ci sera programm\u00e9e en Python 3.7 avec le cadriciel Web back-end Python Flask. Plusieurs librairies d\u2019extraction de caract\u00e9ristiques existent dans ce langage, ce qui facilite grandement l\u2019impl\u00e9mentation. Ces caract\u00e9ristiques forment un vecteur unique \u00e0 chaque pi\u00e8ce musicale. Parmi ces caract\u00e9ristiques, nous pourrions retrouver Modulation Frequency Variance Descriptor, Temporal Rhythm Histograms, Statistical Spectrum Descriptor, Rhythm Histogram, MFCCs, l\u2019image du spectrogramme de la chanson et d\u2019autres caract\u00e9ristiques spectrales. L\u2019extraction automatique de ces caract\u00e9ristiques n\u00e9cessitera quelques notions de traitement de signaux audio. Ces vecteurs de caract\u00e9ristiques devront \u00eatre stock\u00e9s dans une base de donn\u00e9es relationnelle o\u00f9 chaque vecteur devra \u00eatre associ\u00e9 \u00e0 sa la pi\u00e8ce musicale (fichier sur disque et repr\u00e9sentation en m\u00e9moire) et au genre de l\u2019artiste. Afin d\u2019obtenir le fichier musical servant \u00e0 l\u2019extraction des vecteurs de caract\u00e9ristiques, l\u2019application devra se connecter au service de diffusion de musique (streaming) Spotify. Id\u00e9alement, l\u2019architecture de l\u2019application devrait \u00eatre suffisamment g\u00e9n\u00e9rique pour pouvoir interagir avec d\u2019autres services que Spotify. L\u2019application devra \u00e9galement stocker dans une table les caract\u00e9ristiques musicales offertes par l\u2019API de Spotify. \n\nLorsque la portion back-end REST sera termin\u00e9e, test\u00e9e et jug\u00e9e fonctionnelle, l\u2019\u00e9quipe de travail aura \u00e0 concevoir et impl\u00e9menter une application servant d\u2019interface utilisateur (front-end) simple et moderne afin d\u2019interagir avec l\u2019application back-end. La portion front-end pourra \u00eatre impl\u00e9ment\u00e9e avec le cadriciel pr\u00e9f\u00e9r\u00e9 de l\u2019\u00e9quipe de travail tel que React ou VueJS. La portion front-end communiquera avec l\u2019application back-end uniquement par l\u2019API d\u00e9velopp\u00e9 \u00e0 l\u2019interne (architecture 3-tier). Ainsi, les deux applications seront d\u00e9coupl\u00e9es. La construction de l\u2019ensemble de donn\u00e9es devra se faire de fa\u00e7on automatique avec le moins d\u2019interaction possible de l\u2019utilisateur. L\u2019utilisateur devra \u00eatre en mesure d\u2019extraire sous forme de fichier CSV les vecteurs de caract\u00e9ristiques associ\u00e9s  aux genres musicaux qu\u2019il d\u00e9sire. Puisqu\u2019une partie de l\u2019application peut-\u00eatre repr\u00e9sent\u00e9e sous forme de robot Web (Web crawler), l\u2019application devra \u00e9galement permettre de limiter la taille de la base de donn\u00e9es afin d\u2019arr\u00eater l\u2019extraction automatique des caract\u00e9ristiques en cas de d\u00e9passement de l\u2019espace disque. Une portion de l\u2019application devra \u00eatre visible au publique afin que celui-ci puisse \u00e9couter les extraits audio et visualiser les primitives d\u2019une chanson recherch\u00e9e.\n\nL\u2019ensemble de donn\u00e9es g\u00e9n\u00e9r\u00e9 \u00e0 partir de cette application servira entre autres au cours GTI770 dans lequel un laboratoire porte sur la classification automatique de genre musical. Contrairement \u00e0 l\u2019ensemble de donn\u00e9es actuel, le caract\u00e8re dynamique de l\u2019application permettra aux \u00e9tudiants d\u2019\u00e9couter un morceau pr\u00e9sent dans l\u2019ensemble de donn\u00e9es et d\u2019avoir acc\u00e8s au signal audio afin d\u2019effectuer l\u2019apprentissage sur celui-ci ou une repr\u00e9sentation alternative (spectrogramme). Elle permettra \u00e9galement d\u2019\u00eatre un point d\u2019acc\u00e8s pour diff\u00e9rents chercheurs afin d\u2019obtenir un ensemble de donn\u00e9es d\u2019apprentissage. Son interface devra donc \u00eatre simple, efficace, et r\u00e9pondre \u00e0 des sc\u00e9narios d\u2019utilisateurs pr\u00e9cis. Les donn\u00e9es qui seront extraites devront \u00eatre pr\u00eates \u00e0 l\u2019utilisation pour un algorithme d\u2019apprentissage. \n\nUn code source de d\u00e9part pour l\u2019application back-end est disponible pour les \u00e9tudiants souhaitant r\u00e9aliser ce projet. \n\nLe promoteur sera disponible sur place \u00e0 l\u2019\u00c9TS durant la dur\u00e9e du travail. Un groupe Slack sera cr\u00e9\u00e9 afin de promouvoir la communication. Le code source sera g\u00e9r\u00e9 sur la plateforme en ligne GitHub au moyen d\u2019un r\u00e9pertoire priv\u00e9. Une \u00e9quipe d\u2019au minimum 4 personnes devra \u00eatre constitu\u00e9e pour le projet. Les membres sont libres d\u2019utiliser l\u2019outil qu\u2019ils pr\u00e9f\u00e8rent afin de faire la gestion de projet (Atlasssian JIRA est sugg\u00e9r\u00e9 et pourra \u00eatre fourni gratuitement par le promoteur). \n\n\nExpertises requises:\n\nProgrammation Python 3.7 et Python Flask avec au moins un cadriciel front-end (ReactJS, VueJS, BootStrap)  \nExp\u00e9rience avec des librairies scientifiques (NumPy, Pandas, LibROSA)  \nExp\u00e9rience en Linux (Debian ou Red Hat Enterprise Linux)  \nExp\u00e9rience avec Docker est un atout  \nInt\u00e9r\u00eat et exp\u00e9rience envers la programmation Web",
                    "score": 2,
                    "author": "pldelisle"
                }
            ]
        },
        {
            "level": 0,
            "comment": "Check this\nhttp://publicationslist.org/php/search.php?q=log795",
            "score": 2,
            "author": "mahdicanada"
        },
        {
            "level": 0,
            "comment": "Following",
            "score": 0,
            "author": "fella7ena"
        }
    ]
}